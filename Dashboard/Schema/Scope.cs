// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: scope.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace SquaredUp.Dashboard.Schema {

  /// <summary>Holder for reflection information generated from scope.proto</summary>
  public static partial class ScopeReflection {

    #region Descriptor
    /// <summary>File descriptor for scope.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ScopeReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgtzY29wZS5wcm90bxIJc3F1YXJlZHVwGhxnb29nbGUvcHJvdG9idWYvc3Ry",
            "dWN0LnByb3RvGh5nb29nbGUvcHJvdG9idWYvd3JhcHBlcnMucHJvdG8aDW9w",
            "dGlvbnMucHJvdG8i4QEKC0NvbW1vblNjb3BlEhgKCGdyb3VwX2lkGAEgASgJ",
            "QgaStRgCCAESGgoKb2JqZWN0X2lkcxgCIAMoCUIGkrUYAggBEhcKB2NsYXNz",
            "SWQYAyABKAlCBpK1GAIIARIYCghjcml0ZXJpYRgEIAEoCUIGkrUYAiABEhQK",
            "BHR5cGUYBSABKAlCBpK1GAJIARIfCg90cmF2ZXJzYWxfZGVwdGgYBiABKAlC",
            "BpK1GAJIARIbChNleHRlbmRlZF9wcm9wZXJ0aWVzGAcgASgIEhUKDXRvcGxl",
            "dmVsaG9zdHMYCCABKAhCHaoCGlNxdWFyZWRVcC5EYXNoYm9hcmQuU2NoZW1h",
            "YgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.StructReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, global::SquaredUp.Dashboard.Schema.OptionsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::SquaredUp.Dashboard.Schema.CommonScope), global::SquaredUp.Dashboard.Schema.CommonScope.Parser, new[]{ "GroupId", "ObjectIds", "ClassId", "Criteria", "Type", "TraversalDepth", "ExtendedProperties", "Toplevelhosts" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class CommonScope : pb::IMessage<CommonScope> {
    private static readonly pb::MessageParser<CommonScope> _parser = new pb::MessageParser<CommonScope>(() => new CommonScope());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CommonScope> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SquaredUp.Dashboard.Schema.ScopeReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommonScope() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommonScope(CommonScope other) : this() {
      groupId_ = other.groupId_;
      objectIds_ = other.objectIds_.Clone();
      classId_ = other.classId_;
      criteria_ = other.criteria_;
      type_ = other.type_;
      traversalDepth_ = other.traversalDepth_;
      extendedProperties_ = other.extendedProperties_;
      toplevelhosts_ = other.toplevelhosts_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommonScope Clone() {
      return new CommonScope(this);
    }

    /// <summary>Field number for the "group_id" field.</summary>
    public const int GroupIdFieldNumber = 1;
    private string groupId_ = "";
    /// <summary>
    /// Group ID of the scope
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GroupId {
      get { return groupId_; }
      set {
        groupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "object_ids" field.</summary>
    public const int ObjectIdsFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_objectIds_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> objectIds_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Multiple specific object IDs
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> ObjectIds {
      get { return objectIds_; }
    }

    /// <summary>Field number for the "classId" field.</summary>
    public const int ClassIdFieldNumber = 3;
    private string classId_ = "";
    /// <summary>
    /// A specific class ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClassId {
      get { return classId_; }
      set {
        classId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "criteria" field.</summary>
    public const int CriteriaFieldNumber = 4;
    private string criteria_ = "";
    /// <summary>
    /// Criteria (such as severity)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Criteria {
      get { return criteria_; }
      set {
        criteria_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 5;
    private string type_ = "";
    /// <summary>
    /// Can be children or parents
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Type {
      get { return type_; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "traversal_depth" field.</summary>
    public const int TraversalDepthFieldNumber = 6;
    private string traversalDepth_ = "";
    /// <summary>
    /// Traversal depth eg. recursive
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TraversalDepth {
      get { return traversalDepth_; }
      set {
        traversalDepth_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "extended_properties" field.</summary>
    public const int ExtendedPropertiesFieldNumber = 7;
    private bool extendedProperties_;
    /// <summary>
    /// Whether to bring extended properties back
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ExtendedProperties {
      get { return extendedProperties_; }
      set {
        extendedProperties_ = value;
      }
    }

    /// <summary>Field number for the "toplevelhosts" field.</summary>
    public const int ToplevelhostsFieldNumber = 8;
    private bool toplevelhosts_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Toplevelhosts {
      get { return toplevelhosts_; }
      set {
        toplevelhosts_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CommonScope);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CommonScope other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GroupId != other.GroupId) return false;
      if(!objectIds_.Equals(other.objectIds_)) return false;
      if (ClassId != other.ClassId) return false;
      if (Criteria != other.Criteria) return false;
      if (Type != other.Type) return false;
      if (TraversalDepth != other.TraversalDepth) return false;
      if (ExtendedProperties != other.ExtendedProperties) return false;
      if (Toplevelhosts != other.Toplevelhosts) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GroupId.Length != 0) hash ^= GroupId.GetHashCode();
      hash ^= objectIds_.GetHashCode();
      if (ClassId.Length != 0) hash ^= ClassId.GetHashCode();
      if (Criteria.Length != 0) hash ^= Criteria.GetHashCode();
      if (Type.Length != 0) hash ^= Type.GetHashCode();
      if (TraversalDepth.Length != 0) hash ^= TraversalDepth.GetHashCode();
      if (ExtendedProperties != false) hash ^= ExtendedProperties.GetHashCode();
      if (Toplevelhosts != false) hash ^= Toplevelhosts.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (GroupId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(GroupId);
      }
      objectIds_.WriteTo(output, _repeated_objectIds_codec);
      if (ClassId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ClassId);
      }
      if (Criteria.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Criteria);
      }
      if (Type.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Type);
      }
      if (TraversalDepth.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(TraversalDepth);
      }
      if (ExtendedProperties != false) {
        output.WriteRawTag(56);
        output.WriteBool(ExtendedProperties);
      }
      if (Toplevelhosts != false) {
        output.WriteRawTag(64);
        output.WriteBool(Toplevelhosts);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GroupId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupId);
      }
      size += objectIds_.CalculateSize(_repeated_objectIds_codec);
      if (ClassId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClassId);
      }
      if (Criteria.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Criteria);
      }
      if (Type.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      if (TraversalDepth.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TraversalDepth);
      }
      if (ExtendedProperties != false) {
        size += 1 + 1;
      }
      if (Toplevelhosts != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CommonScope other) {
      if (other == null) {
        return;
      }
      if (other.GroupId.Length != 0) {
        GroupId = other.GroupId;
      }
      objectIds_.Add(other.objectIds_);
      if (other.ClassId.Length != 0) {
        ClassId = other.ClassId;
      }
      if (other.Criteria.Length != 0) {
        Criteria = other.Criteria;
      }
      if (other.Type.Length != 0) {
        Type = other.Type;
      }
      if (other.TraversalDepth.Length != 0) {
        TraversalDepth = other.TraversalDepth;
      }
      if (other.ExtendedProperties != false) {
        ExtendedProperties = other.ExtendedProperties;
      }
      if (other.Toplevelhosts != false) {
        Toplevelhosts = other.Toplevelhosts;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            GroupId = input.ReadString();
            break;
          }
          case 18: {
            objectIds_.AddEntriesFrom(input, _repeated_objectIds_codec);
            break;
          }
          case 26: {
            ClassId = input.ReadString();
            break;
          }
          case 34: {
            Criteria = input.ReadString();
            break;
          }
          case 42: {
            Type = input.ReadString();
            break;
          }
          case 50: {
            TraversalDepth = input.ReadString();
            break;
          }
          case 56: {
            ExtendedProperties = input.ReadBool();
            break;
          }
          case 64: {
            Toplevelhosts = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
