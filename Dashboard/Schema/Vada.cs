// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: vada.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace SquaredUp.Dashboard.Schema {

  /// <summary>Holder for reflection information generated from vada.proto</summary>
  public static partial class VadaReflection {

    #region Descriptor
    /// <summary>File descriptor for vada.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static VadaReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cgp2YWRhLnByb3RvEglzcXVhcmVkdXAaHGdvb2dsZS9wcm90b2J1Zi9zdHJ1",
            "Y3QucHJvdG8aHmdvb2dsZS9wcm90b2J1Zi93cmFwcGVycy5wcm90bxoNY29u",
            "dGV4dC5wcm90byKRAgoOVmFkYVRpbGVDb25maWcSMgoHZmlsdGVycxgBIAEo",
            "CzIhLnNxdWFyZWR1cC5WYWRhVGlsZUNvbmZpZ19GaWx0ZXJzEgwKBG1vZGUY",
            "AiABKAkSEQoJcHJvdmlkZXJzGAMgAygJEhoKEnJ1bmRpc2NvdmVyeW9uaW5p",
            "dBgEIAEoCBI4Cgp0cmFuc2Zvcm1zGAUgASgLMiQuc3F1YXJlZHVwLlZhZGFU",
            "aWxlQ29uZmlnX1RyYW5zZm9ybXMSFwoPdmFkYXBlcnNwZWN0aXZlGAYgASgI",
            "EhAKCHJlYWRvbmx5GAcgASgIEikKB2NvbnRleHQYCCABKAsyGC5zcXVhcmVk",
            "dXAuQ29tbW9uQ29udGV4dCIuChZWYWRhVGlsZUNvbmZpZ19GaWx0ZXJzEhQK",
            "DHByb2Nlc3NuYW1lcxgBIAMoCSIbChlWYWRhVGlsZUNvbmZpZ19UcmFuc2Zv",
            "cm1zQh2qAhpTcXVhcmVkVXAuRGFzaGJvYXJkLlNjaGVtYWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.StructReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, global::SquaredUp.Dashboard.Schema.ContextReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::SquaredUp.Dashboard.Schema.VadaTileConfig), global::SquaredUp.Dashboard.Schema.VadaTileConfig.Parser, new[]{ "Filters", "Mode", "Providers", "Rundiscoveryoninit", "Transforms", "Vadaperspective", "Readonly", "Context" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SquaredUp.Dashboard.Schema.VadaTileConfig_Filters), global::SquaredUp.Dashboard.Schema.VadaTileConfig_Filters.Parser, new[]{ "Processnames" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SquaredUp.Dashboard.Schema.VadaTileConfig_Transforms), global::SquaredUp.Dashboard.Schema.VadaTileConfig_Transforms.Parser, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class VadaTileConfig : pb::IMessage<VadaTileConfig> {
    private static readonly pb::MessageParser<VadaTileConfig> _parser = new pb::MessageParser<VadaTileConfig>(() => new VadaTileConfig());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VadaTileConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SquaredUp.Dashboard.Schema.VadaReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VadaTileConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VadaTileConfig(VadaTileConfig other) : this() {
      Filters = other.filters_ != null ? other.Filters.Clone() : null;
      mode_ = other.mode_;
      providers_ = other.providers_.Clone();
      rundiscoveryoninit_ = other.rundiscoveryoninit_;
      Transforms = other.transforms_ != null ? other.Transforms.Clone() : null;
      vadaperspective_ = other.vadaperspective_;
      readonly_ = other.readonly_;
      Context = other.context_ != null ? other.Context.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VadaTileConfig Clone() {
      return new VadaTileConfig(this);
    }

    /// <summary>Field number for the "filters" field.</summary>
    public const int FiltersFieldNumber = 1;
    private global::SquaredUp.Dashboard.Schema.VadaTileConfig_Filters filters_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SquaredUp.Dashboard.Schema.VadaTileConfig_Filters Filters {
      get { return filters_; }
      set {
        filters_ = value;
      }
    }

    /// <summary>Field number for the "mode" field.</summary>
    public const int ModeFieldNumber = 2;
    private string mode_ = "";
    /// <summary>
    /// Typically 'discover'
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Mode {
      get { return mode_; }
      set {
        mode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "providers" field.</summary>
    public const int ProvidersFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_providers_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> providers_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Providers {
      get { return providers_; }
    }

    /// <summary>Field number for the "rundiscoveryoninit" field.</summary>
    public const int RundiscoveryoninitFieldNumber = 4;
    private bool rundiscoveryoninit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Rundiscoveryoninit {
      get { return rundiscoveryoninit_; }
      set {
        rundiscoveryoninit_ = value;
      }
    }

    /// <summary>Field number for the "transforms" field.</summary>
    public const int TransformsFieldNumber = 5;
    private global::SquaredUp.Dashboard.Schema.VadaTileConfig_Transforms transforms_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SquaredUp.Dashboard.Schema.VadaTileConfig_Transforms Transforms {
      get { return transforms_; }
      set {
        transforms_ = value;
      }
    }

    /// <summary>Field number for the "vadaperspective" field.</summary>
    public const int VadaperspectiveFieldNumber = 6;
    private bool vadaperspective_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Vadaperspective {
      get { return vadaperspective_; }
      set {
        vadaperspective_ = value;
      }
    }

    /// <summary>Field number for the "readonly" field.</summary>
    public const int ReadonlyFieldNumber = 7;
    private bool readonly_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Readonly {
      get { return readonly_; }
      set {
        readonly_ = value;
      }
    }

    /// <summary>Field number for the "context" field.</summary>
    public const int ContextFieldNumber = 8;
    private global::SquaredUp.Dashboard.Schema.CommonContext context_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SquaredUp.Dashboard.Schema.CommonContext Context {
      get { return context_; }
      set {
        context_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VadaTileConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VadaTileConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Filters, other.Filters)) return false;
      if (Mode != other.Mode) return false;
      if(!providers_.Equals(other.providers_)) return false;
      if (Rundiscoveryoninit != other.Rundiscoveryoninit) return false;
      if (!object.Equals(Transforms, other.Transforms)) return false;
      if (Vadaperspective != other.Vadaperspective) return false;
      if (Readonly != other.Readonly) return false;
      if (!object.Equals(Context, other.Context)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (filters_ != null) hash ^= Filters.GetHashCode();
      if (Mode.Length != 0) hash ^= Mode.GetHashCode();
      hash ^= providers_.GetHashCode();
      if (Rundiscoveryoninit != false) hash ^= Rundiscoveryoninit.GetHashCode();
      if (transforms_ != null) hash ^= Transforms.GetHashCode();
      if (Vadaperspective != false) hash ^= Vadaperspective.GetHashCode();
      if (Readonly != false) hash ^= Readonly.GetHashCode();
      if (context_ != null) hash ^= Context.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (filters_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Filters);
      }
      if (Mode.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Mode);
      }
      providers_.WriteTo(output, _repeated_providers_codec);
      if (Rundiscoveryoninit != false) {
        output.WriteRawTag(32);
        output.WriteBool(Rundiscoveryoninit);
      }
      if (transforms_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Transforms);
      }
      if (Vadaperspective != false) {
        output.WriteRawTag(48);
        output.WriteBool(Vadaperspective);
      }
      if (Readonly != false) {
        output.WriteRawTag(56);
        output.WriteBool(Readonly);
      }
      if (context_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Context);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (filters_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Filters);
      }
      if (Mode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Mode);
      }
      size += providers_.CalculateSize(_repeated_providers_codec);
      if (Rundiscoveryoninit != false) {
        size += 1 + 1;
      }
      if (transforms_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Transforms);
      }
      if (Vadaperspective != false) {
        size += 1 + 1;
      }
      if (Readonly != false) {
        size += 1 + 1;
      }
      if (context_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Context);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VadaTileConfig other) {
      if (other == null) {
        return;
      }
      if (other.filters_ != null) {
        if (filters_ == null) {
          filters_ = new global::SquaredUp.Dashboard.Schema.VadaTileConfig_Filters();
        }
        Filters.MergeFrom(other.Filters);
      }
      if (other.Mode.Length != 0) {
        Mode = other.Mode;
      }
      providers_.Add(other.providers_);
      if (other.Rundiscoveryoninit != false) {
        Rundiscoveryoninit = other.Rundiscoveryoninit;
      }
      if (other.transforms_ != null) {
        if (transforms_ == null) {
          transforms_ = new global::SquaredUp.Dashboard.Schema.VadaTileConfig_Transforms();
        }
        Transforms.MergeFrom(other.Transforms);
      }
      if (other.Vadaperspective != false) {
        Vadaperspective = other.Vadaperspective;
      }
      if (other.Readonly != false) {
        Readonly = other.Readonly;
      }
      if (other.context_ != null) {
        if (context_ == null) {
          context_ = new global::SquaredUp.Dashboard.Schema.CommonContext();
        }
        Context.MergeFrom(other.Context);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (filters_ == null) {
              filters_ = new global::SquaredUp.Dashboard.Schema.VadaTileConfig_Filters();
            }
            input.ReadMessage(filters_);
            break;
          }
          case 18: {
            Mode = input.ReadString();
            break;
          }
          case 26: {
            providers_.AddEntriesFrom(input, _repeated_providers_codec);
            break;
          }
          case 32: {
            Rundiscoveryoninit = input.ReadBool();
            break;
          }
          case 42: {
            if (transforms_ == null) {
              transforms_ = new global::SquaredUp.Dashboard.Schema.VadaTileConfig_Transforms();
            }
            input.ReadMessage(transforms_);
            break;
          }
          case 48: {
            Vadaperspective = input.ReadBool();
            break;
          }
          case 56: {
            Readonly = input.ReadBool();
            break;
          }
          case 66: {
            if (context_ == null) {
              context_ = new global::SquaredUp.Dashboard.Schema.CommonContext();
            }
            input.ReadMessage(context_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class VadaTileConfig_Filters : pb::IMessage<VadaTileConfig_Filters> {
    private static readonly pb::MessageParser<VadaTileConfig_Filters> _parser = new pb::MessageParser<VadaTileConfig_Filters>(() => new VadaTileConfig_Filters());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VadaTileConfig_Filters> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SquaredUp.Dashboard.Schema.VadaReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VadaTileConfig_Filters() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VadaTileConfig_Filters(VadaTileConfig_Filters other) : this() {
      processnames_ = other.processnames_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VadaTileConfig_Filters Clone() {
      return new VadaTileConfig_Filters(this);
    }

    /// <summary>Field number for the "processnames" field.</summary>
    public const int ProcessnamesFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_processnames_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> processnames_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Processnames {
      get { return processnames_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VadaTileConfig_Filters);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VadaTileConfig_Filters other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!processnames_.Equals(other.processnames_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= processnames_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      processnames_.WriteTo(output, _repeated_processnames_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += processnames_.CalculateSize(_repeated_processnames_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VadaTileConfig_Filters other) {
      if (other == null) {
        return;
      }
      processnames_.Add(other.processnames_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            processnames_.AddEntriesFrom(input, _repeated_processnames_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class VadaTileConfig_Transforms : pb::IMessage<VadaTileConfig_Transforms> {
    private static readonly pb::MessageParser<VadaTileConfig_Transforms> _parser = new pb::MessageParser<VadaTileConfig_Transforms>(() => new VadaTileConfig_Transforms());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VadaTileConfig_Transforms> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SquaredUp.Dashboard.Schema.VadaReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VadaTileConfig_Transforms() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VadaTileConfig_Transforms(VadaTileConfig_Transforms other) : this() {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VadaTileConfig_Transforms Clone() {
      return new VadaTileConfig_Transforms(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VadaTileConfig_Transforms);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VadaTileConfig_Transforms other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VadaTileConfig_Transforms other) {
      if (other == null) {
        return;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
