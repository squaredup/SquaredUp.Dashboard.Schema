// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: web.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace SquaredUp.Dashboard.Schema {

  /// <summary>Holder for reflection information generated from web.proto</summary>
  public static partial class WebReflection {

    #region Descriptor
    /// <summary>File descriptor for web.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static WebReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cgl3ZWIucHJvdG8SCXNxdWFyZWR1cBocZ29vZ2xlL3Byb3RvYnVmL3N0cnVj",
            "dC5wcm90bxoeZ29vZ2xlL3Byb3RvYnVmL3dyYXBwZXJzLnByb3RvIqEBChRX",
            "ZWJDb250ZW50VGlsZUNvbmZpZxI4CgdkaXNwbGF5GAEgASgLMicuc3F1YXJl",
            "ZHVwLldlYkNvbnRlbnRUaWxlQ29uZmlnX0Rpc3BsYXkSJgoGc291cmNlGAIg",
            "ASgLMhYuZ29vZ2xlLnByb3RvYnVmLlZhbHVlEicKB2NvbnRleHQYAyABKAsy",
            "Fi5nb29nbGUucHJvdG9idWYuVmFsdWUinAEKHFdlYkNvbnRlbnRUaWxlQ29u",
            "ZmlnX0Rpc3BsYXkSDgoGaGVpZ2h0GAEgASgFEgwKBHpvb20YAiABKAESDgoG",
            "Ym9yZGVyGAMgASgIEhEKCXNjcm9sbGluZxgEIAEoCBIPCgdyZWZyZXNoGAUg",
            "ASgIEgsKA3NyYxgGIAEoCRIPCgdjb250ZW50GAcgASgJEgwKBGxpbmsYCCAB",
            "KAgi0gEKGFdlYkFwaUFzU2NhbGFyVGlsZUNvbmZpZxI8Cgdjb250ZXh0GAEg",
            "ASgLMisuc3F1YXJlZHVwLldlYkFwaUFzU2NhbGFyVGlsZUNvbmZpZ19Db250",
            "ZXh0EjoKBnNvdXJjZRgCIAEoCzIqLnNxdWFyZWR1cC5XZWJBcGlBc1NjYWxh",
            "clRpbGVDb25maWdfU291cmNlEjwKB2Rpc3BsYXkYAyABKAsyKy5zcXVhcmVk",
            "dXAuV2ViQXBpQXNTY2FsYXJUaWxlQ29uZmlnX0Rpc3BsYXkiIgogV2ViQXBp",
            "QXNTY2FsYXJUaWxlQ29uZmlnX0NvbnRleHQi9wEKH1dlYkFwaUFzU2NhbGFy",
            "VGlsZUNvbmZpZ19Tb3VyY2USEQoJX3NlY3VyaXR5GAEgASgJEg4KBm1ldGhv",
            "ZBgCIAEoCRIQCghwcm92aWRlchgDIAEoCRILCgN1cmwYBCABKAkSDwoHa2V5",
            "cGF0aBgFIAEoCRJCCgdoZWFkZXJzGAYgAygLMjEuc3F1YXJlZHVwLldlYkFw",
            "aUFzU2NhbGFyVGlsZUNvbmZpZ19Tb3VyY2VfSGVhZGVyEj0KBGRhdGEYByAD",
            "KAsyLy5zcXVhcmVkdXAuV2ViQXBpQXNTY2FsYXJUaWxlQ29uZmlnX1NvdXJj",
            "ZV9EYXRhIkQKJldlYkFwaUFzU2NhbGFyVGlsZUNvbmZpZ19Tb3VyY2VfSGVh",
            "ZGVyEgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCSJCCiRXZWJBcGlBc1Nj",
            "YWxhclRpbGVDb25maWdfU291cmNlX0RhdGESCwoDa2V5GAEgASgJEg0KBXZh",
            "bHVlGAIgASgJImcKIFdlYkFwaUFzU2NhbGFyVGlsZUNvbmZpZ19EaXNwbGF5",
            "EhAKCGZvbnRzaXplGAEgASgBEhUKDWNvZXJjZV9vYmplY3QYAiABKAgSDAoE",
            "dW5pdBgDIAEoCRIMCgR6b29tGAQgASgJIs4BChdXZWJBcGlBc1RhYmxlVGls",
            "ZUNvbmZpZxI7Cgdjb250ZXh0GAEgASgLMiouc3F1YXJlZHVwLldlYkFwaUFz",
            "VGFibGVUaWxlQ29uZmlnX0NvbnRleHQSOQoGc291cmNlGAIgASgLMikuc3F1",
            "YXJlZHVwLldlYkFwaUFzVGFibGVUaWxlQ29uZmlnX1NvdXJjZRI7CgdkaXNw",
            "bGF5GAMgASgLMiouc3F1YXJlZHVwLldlYkFwaUFzVGFibGVUaWxlQ29uZmln",
            "X0Rpc3BsYXkiIQofV2ViQXBpQXNUYWJsZVRpbGVDb25maWdfQ29udGV4dCL0",
            "AQoeV2ViQXBpQXNUYWJsZVRpbGVDb25maWdfU291cmNlEhEKCV9zZWN1cml0",
            "eRgBIAEoCRIOCgZtZXRob2QYAiABKAkSEAoIcHJvdmlkZXIYAyABKAkSCwoD",
            "dXJsGAQgASgJEg8KB2tleXBhdGgYBSABKAkSQQoHaGVhZGVycxgGIAMoCzIw",
            "LnNxdWFyZWR1cC5XZWJBcGlBc1RhYmxlVGlsZUNvbmZpZ19Tb3VyY2VfSGVh",
            "ZGVyEjwKBGRhdGEYByADKAsyLi5zcXVhcmVkdXAuV2ViQXBpQXNUYWJsZVRp",
            "bGVDb25maWdfU291cmNlX0RhdGEiQwolV2ViQXBpQXNUYWJsZVRpbGVDb25m",
            "aWdfU291cmNlX0hlYWRlchILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAki",
            "QQojV2ViQXBpQXNUYWJsZVRpbGVDb25maWdfU291cmNlX0RhdGESCwoDa2V5",
            "GAEgASgJEg0KBXZhbHVlGAIgASgJIs0DCh9XZWJBcGlBc1RhYmxlVGlsZUNv",
            "bmZpZ19EaXNwbGF5EhQKDHNob3dfaGVhZGVycxgBIAEoCBJZChBjb2x1bW5f",
            "b3ZlcnJpZGVzGAIgAygLMj8uc3F1YXJlZHVwLldlYkFwaUFzVGFibGVUaWxl",
            "Q29uZmlnX0Rpc3BsYXkuQ29sdW1uT3ZlcnJpZGVzRW50cnkSVQoOY3VzdG9t",
            "X2NvbHVtbnMYAyADKAsyPS5zcXVhcmVkdXAuV2ViQXBpQXNUYWJsZVRpbGVD",
            "b25maWdfRGlzcGxheS5DdXN0b21Db2x1bW5zRW50cnkSDwoHY29sdW1ucxgE",
            "IAMoCRIQCghhdXRvaGlkZRgFIAEoCBIQCghyb3dfbGluaxgGIAEoCRIMCgR6",
            "b29tGAcgASgJGmkKFENvbHVtbk92ZXJyaWRlc0VudHJ5EgsKA2tleRgBIAEo",
            "CRJACgV2YWx1ZRgCIAEoCzIxLnNxdWFyZWR1cC5XZWJBcGlBc1RhYmxlVGls",
            "ZUNvbmZpZ19Db2x1bW5PdmVycmlkZToCOAEaNAoSQ3VzdG9tQ29sdW1uc0Vu",
            "dHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAEiOgomV2ViQXBp",
            "QXNUYWJsZVRpbGVDb25maWdfQ29sdW1uT3ZlcnJpZGUSEAoIdGVtcGxhdGUY",
            "ASABKAlCHaoCGlNxdWFyZWRVcC5EYXNoYm9hcmQuU2NoZW1hYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.StructReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::SquaredUp.Dashboard.Schema.WebContentTileConfig), global::SquaredUp.Dashboard.Schema.WebContentTileConfig.Parser, new[]{ "Display", "Source", "Context" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SquaredUp.Dashboard.Schema.WebContentTileConfig_Display), global::SquaredUp.Dashboard.Schema.WebContentTileConfig_Display.Parser, new[]{ "Height", "Zoom", "Border", "Scrolling", "Refresh", "Src", "Content", "Link" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SquaredUp.Dashboard.Schema.WebApiAsScalarTileConfig), global::SquaredUp.Dashboard.Schema.WebApiAsScalarTileConfig.Parser, new[]{ "Context", "Source", "Display" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SquaredUp.Dashboard.Schema.WebApiAsScalarTileConfig_Context), global::SquaredUp.Dashboard.Schema.WebApiAsScalarTileConfig_Context.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SquaredUp.Dashboard.Schema.WebApiAsScalarTileConfig_Source), global::SquaredUp.Dashboard.Schema.WebApiAsScalarTileConfig_Source.Parser, new[]{ "Security", "Method", "Provider", "Url", "Keypath", "Headers", "Data" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SquaredUp.Dashboard.Schema.WebApiAsScalarTileConfig_Source_Header), global::SquaredUp.Dashboard.Schema.WebApiAsScalarTileConfig_Source_Header.Parser, new[]{ "Key", "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SquaredUp.Dashboard.Schema.WebApiAsScalarTileConfig_Source_Data), global::SquaredUp.Dashboard.Schema.WebApiAsScalarTileConfig_Source_Data.Parser, new[]{ "Key", "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SquaredUp.Dashboard.Schema.WebApiAsScalarTileConfig_Display), global::SquaredUp.Dashboard.Schema.WebApiAsScalarTileConfig_Display.Parser, new[]{ "Fontsize", "CoerceObject", "Unit", "Zoom" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SquaredUp.Dashboard.Schema.WebApiAsTableTileConfig), global::SquaredUp.Dashboard.Schema.WebApiAsTableTileConfig.Parser, new[]{ "Context", "Source", "Display" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SquaredUp.Dashboard.Schema.WebApiAsTableTileConfig_Context), global::SquaredUp.Dashboard.Schema.WebApiAsTableTileConfig_Context.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SquaredUp.Dashboard.Schema.WebApiAsTableTileConfig_Source), global::SquaredUp.Dashboard.Schema.WebApiAsTableTileConfig_Source.Parser, new[]{ "Security", "Method", "Provider", "Url", "Keypath", "Headers", "Data" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SquaredUp.Dashboard.Schema.WebApiAsTableTileConfig_Source_Header), global::SquaredUp.Dashboard.Schema.WebApiAsTableTileConfig_Source_Header.Parser, new[]{ "Key", "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SquaredUp.Dashboard.Schema.WebApiAsTableTileConfig_Source_Data), global::SquaredUp.Dashboard.Schema.WebApiAsTableTileConfig_Source_Data.Parser, new[]{ "Key", "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SquaredUp.Dashboard.Schema.WebApiAsTableTileConfig_Display), global::SquaredUp.Dashboard.Schema.WebApiAsTableTileConfig_Display.Parser, new[]{ "ShowHeaders", "ColumnOverrides", "CustomColumns", "Columns", "Autohide", "RowLink", "Zoom" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::SquaredUp.Dashboard.Schema.WebApiAsTableTileConfig_ColumnOverride), global::SquaredUp.Dashboard.Schema.WebApiAsTableTileConfig_ColumnOverride.Parser, new[]{ "Template" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// tile/web-content
  /// </summary>
  public sealed partial class WebContentTileConfig : pb::IMessage<WebContentTileConfig> {
    private static readonly pb::MessageParser<WebContentTileConfig> _parser = new pb::MessageParser<WebContentTileConfig>(() => new WebContentTileConfig());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WebContentTileConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SquaredUp.Dashboard.Schema.WebReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebContentTileConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebContentTileConfig(WebContentTileConfig other) : this() {
      Display = other.display_ != null ? other.Display.Clone() : null;
      Source = other.source_ != null ? other.Source.Clone() : null;
      Context = other.context_ != null ? other.Context.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebContentTileConfig Clone() {
      return new WebContentTileConfig(this);
    }

    /// <summary>Field number for the "display" field.</summary>
    public const int DisplayFieldNumber = 1;
    private global::SquaredUp.Dashboard.Schema.WebContentTileConfig_Display display_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SquaredUp.Dashboard.Schema.WebContentTileConfig_Display Display {
      get { return display_; }
      set {
        display_ = value;
      }
    }

    /// <summary>Field number for the "source" field.</summary>
    public const int SourceFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Value source_;
    /// <summary>
    /// Generally empty (source: {})
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Value Source {
      get { return source_; }
      set {
        source_ = value;
      }
    }

    /// <summary>Field number for the "context" field.</summary>
    public const int ContextFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Value context_;
    /// <summary>
    /// Generally empty
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Value Context {
      get { return context_; }
      set {
        context_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WebContentTileConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WebContentTileConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Display, other.Display)) return false;
      if (!object.Equals(Source, other.Source)) return false;
      if (!object.Equals(Context, other.Context)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (display_ != null) hash ^= Display.GetHashCode();
      if (source_ != null) hash ^= Source.GetHashCode();
      if (context_ != null) hash ^= Context.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (display_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Display);
      }
      if (source_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Source);
      }
      if (context_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Context);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (display_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Display);
      }
      if (source_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Source);
      }
      if (context_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Context);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WebContentTileConfig other) {
      if (other == null) {
        return;
      }
      if (other.display_ != null) {
        if (display_ == null) {
          display_ = new global::SquaredUp.Dashboard.Schema.WebContentTileConfig_Display();
        }
        Display.MergeFrom(other.Display);
      }
      if (other.source_ != null) {
        if (source_ == null) {
          source_ = new global::Google.Protobuf.WellKnownTypes.Value();
        }
        Source.MergeFrom(other.Source);
      }
      if (other.context_ != null) {
        if (context_ == null) {
          context_ = new global::Google.Protobuf.WellKnownTypes.Value();
        }
        Context.MergeFrom(other.Context);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (display_ == null) {
              display_ = new global::SquaredUp.Dashboard.Schema.WebContentTileConfig_Display();
            }
            input.ReadMessage(display_);
            break;
          }
          case 18: {
            if (source_ == null) {
              source_ = new global::Google.Protobuf.WellKnownTypes.Value();
            }
            input.ReadMessage(source_);
            break;
          }
          case 26: {
            if (context_ == null) {
              context_ = new global::Google.Protobuf.WellKnownTypes.Value();
            }
            input.ReadMessage(context_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class WebContentTileConfig_Display : pb::IMessage<WebContentTileConfig_Display> {
    private static readonly pb::MessageParser<WebContentTileConfig_Display> _parser = new pb::MessageParser<WebContentTileConfig_Display>(() => new WebContentTileConfig_Display());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WebContentTileConfig_Display> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SquaredUp.Dashboard.Schema.WebReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebContentTileConfig_Display() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebContentTileConfig_Display(WebContentTileConfig_Display other) : this() {
      height_ = other.height_;
      zoom_ = other.zoom_;
      border_ = other.border_;
      scrolling_ = other.scrolling_;
      refresh_ = other.refresh_;
      src_ = other.src_;
      content_ = other.content_;
      link_ = other.link_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebContentTileConfig_Display Clone() {
      return new WebContentTileConfig_Display(this);
    }

    /// <summary>Field number for the "height" field.</summary>
    public const int HeightFieldNumber = 1;
    private int height_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Height {
      get { return height_; }
      set {
        height_ = value;
      }
    }

    /// <summary>Field number for the "zoom" field.</summary>
    public const int ZoomFieldNumber = 2;
    private double zoom_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Zoom {
      get { return zoom_; }
      set {
        zoom_ = value;
      }
    }

    /// <summary>Field number for the "border" field.</summary>
    public const int BorderFieldNumber = 3;
    private bool border_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Border {
      get { return border_; }
      set {
        border_ = value;
      }
    }

    /// <summary>Field number for the "scrolling" field.</summary>
    public const int ScrollingFieldNumber = 4;
    private bool scrolling_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Scrolling {
      get { return scrolling_; }
      set {
        scrolling_ = value;
      }
    }

    /// <summary>Field number for the "refresh" field.</summary>
    public const int RefreshFieldNumber = 5;
    private bool refresh_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Refresh {
      get { return refresh_; }
      set {
        refresh_ = value;
      }
    }

    /// <summary>Field number for the "src" field.</summary>
    public const int SrcFieldNumber = 6;
    private string src_ = "";
    /// <summary>
    /// URL, if specified
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Src {
      get { return src_; }
      set {
        src_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "content" field.</summary>
    public const int ContentFieldNumber = 7;
    private string content_ = "";
    /// <summary>
    /// Literal HTML content, if specified
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Content {
      get { return content_; }
      set {
        content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "link" field.</summary>
    public const int LinkFieldNumber = 8;
    private bool link_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Link {
      get { return link_; }
      set {
        link_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WebContentTileConfig_Display);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WebContentTileConfig_Display other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Height != other.Height) return false;
      if (Zoom != other.Zoom) return false;
      if (Border != other.Border) return false;
      if (Scrolling != other.Scrolling) return false;
      if (Refresh != other.Refresh) return false;
      if (Src != other.Src) return false;
      if (Content != other.Content) return false;
      if (Link != other.Link) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Height != 0) hash ^= Height.GetHashCode();
      if (Zoom != 0D) hash ^= Zoom.GetHashCode();
      if (Border != false) hash ^= Border.GetHashCode();
      if (Scrolling != false) hash ^= Scrolling.GetHashCode();
      if (Refresh != false) hash ^= Refresh.GetHashCode();
      if (Src.Length != 0) hash ^= Src.GetHashCode();
      if (Content.Length != 0) hash ^= Content.GetHashCode();
      if (Link != false) hash ^= Link.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Height != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Height);
      }
      if (Zoom != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Zoom);
      }
      if (Border != false) {
        output.WriteRawTag(24);
        output.WriteBool(Border);
      }
      if (Scrolling != false) {
        output.WriteRawTag(32);
        output.WriteBool(Scrolling);
      }
      if (Refresh != false) {
        output.WriteRawTag(40);
        output.WriteBool(Refresh);
      }
      if (Src.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Src);
      }
      if (Content.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Content);
      }
      if (Link != false) {
        output.WriteRawTag(64);
        output.WriteBool(Link);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Height != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Height);
      }
      if (Zoom != 0D) {
        size += 1 + 8;
      }
      if (Border != false) {
        size += 1 + 1;
      }
      if (Scrolling != false) {
        size += 1 + 1;
      }
      if (Refresh != false) {
        size += 1 + 1;
      }
      if (Src.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Src);
      }
      if (Content.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Content);
      }
      if (Link != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WebContentTileConfig_Display other) {
      if (other == null) {
        return;
      }
      if (other.Height != 0) {
        Height = other.Height;
      }
      if (other.Zoom != 0D) {
        Zoom = other.Zoom;
      }
      if (other.Border != false) {
        Border = other.Border;
      }
      if (other.Scrolling != false) {
        Scrolling = other.Scrolling;
      }
      if (other.Refresh != false) {
        Refresh = other.Refresh;
      }
      if (other.Src.Length != 0) {
        Src = other.Src;
      }
      if (other.Content.Length != 0) {
        Content = other.Content;
      }
      if (other.Link != false) {
        Link = other.Link;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Height = input.ReadInt32();
            break;
          }
          case 17: {
            Zoom = input.ReadDouble();
            break;
          }
          case 24: {
            Border = input.ReadBool();
            break;
          }
          case 32: {
            Scrolling = input.ReadBool();
            break;
          }
          case 40: {
            Refresh = input.ReadBool();
            break;
          }
          case 50: {
            Src = input.ReadString();
            break;
          }
          case 58: {
            Content = input.ReadString();
            break;
          }
          case 64: {
            Link = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class WebApiAsScalarTileConfig : pb::IMessage<WebApiAsScalarTileConfig> {
    private static readonly pb::MessageParser<WebApiAsScalarTileConfig> _parser = new pb::MessageParser<WebApiAsScalarTileConfig>(() => new WebApiAsScalarTileConfig());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WebApiAsScalarTileConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SquaredUp.Dashboard.Schema.WebReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebApiAsScalarTileConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebApiAsScalarTileConfig(WebApiAsScalarTileConfig other) : this() {
      Context = other.context_ != null ? other.Context.Clone() : null;
      Source = other.source_ != null ? other.Source.Clone() : null;
      Display = other.display_ != null ? other.Display.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebApiAsScalarTileConfig Clone() {
      return new WebApiAsScalarTileConfig(this);
    }

    /// <summary>Field number for the "context" field.</summary>
    public const int ContextFieldNumber = 1;
    private global::SquaredUp.Dashboard.Schema.WebApiAsScalarTileConfig_Context context_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SquaredUp.Dashboard.Schema.WebApiAsScalarTileConfig_Context Context {
      get { return context_; }
      set {
        context_ = value;
      }
    }

    /// <summary>Field number for the "source" field.</summary>
    public const int SourceFieldNumber = 2;
    private global::SquaredUp.Dashboard.Schema.WebApiAsScalarTileConfig_Source source_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SquaredUp.Dashboard.Schema.WebApiAsScalarTileConfig_Source Source {
      get { return source_; }
      set {
        source_ = value;
      }
    }

    /// <summary>Field number for the "display" field.</summary>
    public const int DisplayFieldNumber = 3;
    private global::SquaredUp.Dashboard.Schema.WebApiAsScalarTileConfig_Display display_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SquaredUp.Dashboard.Schema.WebApiAsScalarTileConfig_Display Display {
      get { return display_; }
      set {
        display_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WebApiAsScalarTileConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WebApiAsScalarTileConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Context, other.Context)) return false;
      if (!object.Equals(Source, other.Source)) return false;
      if (!object.Equals(Display, other.Display)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (context_ != null) hash ^= Context.GetHashCode();
      if (source_ != null) hash ^= Source.GetHashCode();
      if (display_ != null) hash ^= Display.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (context_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Context);
      }
      if (source_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Source);
      }
      if (display_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Display);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (context_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Context);
      }
      if (source_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Source);
      }
      if (display_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Display);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WebApiAsScalarTileConfig other) {
      if (other == null) {
        return;
      }
      if (other.context_ != null) {
        if (context_ == null) {
          context_ = new global::SquaredUp.Dashboard.Schema.WebApiAsScalarTileConfig_Context();
        }
        Context.MergeFrom(other.Context);
      }
      if (other.source_ != null) {
        if (source_ == null) {
          source_ = new global::SquaredUp.Dashboard.Schema.WebApiAsScalarTileConfig_Source();
        }
        Source.MergeFrom(other.Source);
      }
      if (other.display_ != null) {
        if (display_ == null) {
          display_ = new global::SquaredUp.Dashboard.Schema.WebApiAsScalarTileConfig_Display();
        }
        Display.MergeFrom(other.Display);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (context_ == null) {
              context_ = new global::SquaredUp.Dashboard.Schema.WebApiAsScalarTileConfig_Context();
            }
            input.ReadMessage(context_);
            break;
          }
          case 18: {
            if (source_ == null) {
              source_ = new global::SquaredUp.Dashboard.Schema.WebApiAsScalarTileConfig_Source();
            }
            input.ReadMessage(source_);
            break;
          }
          case 26: {
            if (display_ == null) {
              display_ = new global::SquaredUp.Dashboard.Schema.WebApiAsScalarTileConfig_Display();
            }
            input.ReadMessage(display_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Empty
  /// </summary>
  public sealed partial class WebApiAsScalarTileConfig_Context : pb::IMessage<WebApiAsScalarTileConfig_Context> {
    private static readonly pb::MessageParser<WebApiAsScalarTileConfig_Context> _parser = new pb::MessageParser<WebApiAsScalarTileConfig_Context>(() => new WebApiAsScalarTileConfig_Context());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WebApiAsScalarTileConfig_Context> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SquaredUp.Dashboard.Schema.WebReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebApiAsScalarTileConfig_Context() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebApiAsScalarTileConfig_Context(WebApiAsScalarTileConfig_Context other) : this() {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebApiAsScalarTileConfig_Context Clone() {
      return new WebApiAsScalarTileConfig_Context(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WebApiAsScalarTileConfig_Context);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WebApiAsScalarTileConfig_Context other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WebApiAsScalarTileConfig_Context other) {
      if (other == null) {
        return;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  public sealed partial class WebApiAsScalarTileConfig_Source : pb::IMessage<WebApiAsScalarTileConfig_Source> {
    private static readonly pb::MessageParser<WebApiAsScalarTileConfig_Source> _parser = new pb::MessageParser<WebApiAsScalarTileConfig_Source>(() => new WebApiAsScalarTileConfig_Source());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WebApiAsScalarTileConfig_Source> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SquaredUp.Dashboard.Schema.WebReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebApiAsScalarTileConfig_Source() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebApiAsScalarTileConfig_Source(WebApiAsScalarTileConfig_Source other) : this() {
      Security_ = other.Security_;
      method_ = other.method_;
      provider_ = other.provider_;
      url_ = other.url_;
      keypath_ = other.keypath_;
      headers_ = other.headers_.Clone();
      data_ = other.data_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebApiAsScalarTileConfig_Source Clone() {
      return new WebApiAsScalarTileConfig_Source(this);
    }

    /// <summary>Field number for the "_security" field.</summary>
    public const int SecurityFieldNumber = 1;
    private string Security_ = "";
    /// <summary>
    /// Typically "signing"
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Security {
      get { return Security_; }
      set {
        Security_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "method" field.</summary>
    public const int MethodFieldNumber = 2;
    private string method_ = "";
    /// <summary>
    /// GET or POST
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Method {
      get { return method_; }
      set {
        method_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "provider" field.</summary>
    public const int ProviderFieldNumber = 3;
    private string provider_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Provider {
      get { return provider_; }
      set {
        provider_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 4;
    private string url_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Url {
      get { return url_; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "keypath" field.</summary>
    public const int KeypathFieldNumber = 5;
    private string keypath_ = "";
    /// <summary>
    /// Keypath from response
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Keypath {
      get { return keypath_; }
      set {
        keypath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "headers" field.</summary>
    public const int HeadersFieldNumber = 6;
    private static readonly pb::FieldCodec<global::SquaredUp.Dashboard.Schema.WebApiAsScalarTileConfig_Source_Header> _repeated_headers_codec
        = pb::FieldCodec.ForMessage(50, global::SquaredUp.Dashboard.Schema.WebApiAsScalarTileConfig_Source_Header.Parser);
    private readonly pbc::RepeatedField<global::SquaredUp.Dashboard.Schema.WebApiAsScalarTileConfig_Source_Header> headers_ = new pbc::RepeatedField<global::SquaredUp.Dashboard.Schema.WebApiAsScalarTileConfig_Source_Header>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SquaredUp.Dashboard.Schema.WebApiAsScalarTileConfig_Source_Header> Headers {
      get { return headers_; }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 7;
    private static readonly pb::FieldCodec<global::SquaredUp.Dashboard.Schema.WebApiAsScalarTileConfig_Source_Data> _repeated_data_codec
        = pb::FieldCodec.ForMessage(58, global::SquaredUp.Dashboard.Schema.WebApiAsScalarTileConfig_Source_Data.Parser);
    private readonly pbc::RepeatedField<global::SquaredUp.Dashboard.Schema.WebApiAsScalarTileConfig_Source_Data> data_ = new pbc::RepeatedField<global::SquaredUp.Dashboard.Schema.WebApiAsScalarTileConfig_Source_Data>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SquaredUp.Dashboard.Schema.WebApiAsScalarTileConfig_Source_Data> Data {
      get { return data_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WebApiAsScalarTileConfig_Source);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WebApiAsScalarTileConfig_Source other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Security != other.Security) return false;
      if (Method != other.Method) return false;
      if (Provider != other.Provider) return false;
      if (Url != other.Url) return false;
      if (Keypath != other.Keypath) return false;
      if(!headers_.Equals(other.headers_)) return false;
      if(!data_.Equals(other.data_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Security.Length != 0) hash ^= Security.GetHashCode();
      if (Method.Length != 0) hash ^= Method.GetHashCode();
      if (Provider.Length != 0) hash ^= Provider.GetHashCode();
      if (Url.Length != 0) hash ^= Url.GetHashCode();
      if (Keypath.Length != 0) hash ^= Keypath.GetHashCode();
      hash ^= headers_.GetHashCode();
      hash ^= data_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Security.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Security);
      }
      if (Method.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Method);
      }
      if (Provider.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Provider);
      }
      if (Url.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Url);
      }
      if (Keypath.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Keypath);
      }
      headers_.WriteTo(output, _repeated_headers_codec);
      data_.WriteTo(output, _repeated_data_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Security.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Security);
      }
      if (Method.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Method);
      }
      if (Provider.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Provider);
      }
      if (Url.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      if (Keypath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Keypath);
      }
      size += headers_.CalculateSize(_repeated_headers_codec);
      size += data_.CalculateSize(_repeated_data_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WebApiAsScalarTileConfig_Source other) {
      if (other == null) {
        return;
      }
      if (other.Security.Length != 0) {
        Security = other.Security;
      }
      if (other.Method.Length != 0) {
        Method = other.Method;
      }
      if (other.Provider.Length != 0) {
        Provider = other.Provider;
      }
      if (other.Url.Length != 0) {
        Url = other.Url;
      }
      if (other.Keypath.Length != 0) {
        Keypath = other.Keypath;
      }
      headers_.Add(other.headers_);
      data_.Add(other.data_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Security = input.ReadString();
            break;
          }
          case 18: {
            Method = input.ReadString();
            break;
          }
          case 26: {
            Provider = input.ReadString();
            break;
          }
          case 34: {
            Url = input.ReadString();
            break;
          }
          case 42: {
            Keypath = input.ReadString();
            break;
          }
          case 50: {
            headers_.AddEntriesFrom(input, _repeated_headers_codec);
            break;
          }
          case 58: {
            data_.AddEntriesFrom(input, _repeated_data_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class WebApiAsScalarTileConfig_Source_Header : pb::IMessage<WebApiAsScalarTileConfig_Source_Header> {
    private static readonly pb::MessageParser<WebApiAsScalarTileConfig_Source_Header> _parser = new pb::MessageParser<WebApiAsScalarTileConfig_Source_Header>(() => new WebApiAsScalarTileConfig_Source_Header());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WebApiAsScalarTileConfig_Source_Header> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SquaredUp.Dashboard.Schema.WebReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebApiAsScalarTileConfig_Source_Header() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebApiAsScalarTileConfig_Source_Header(WebApiAsScalarTileConfig_Source_Header other) : this() {
      key_ = other.key_;
      value_ = other.value_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebApiAsScalarTileConfig_Source_Header Clone() {
      return new WebApiAsScalarTileConfig_Source_Header(this);
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 1;
    private string key_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Key {
      get { return key_; }
      set {
        key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private string value_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WebApiAsScalarTileConfig_Source_Header);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WebApiAsScalarTileConfig_Source_Header other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Key != other.Key) return false;
      if (Value != other.Value) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Key.Length != 0) hash ^= Key.GetHashCode();
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Key.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Key);
      }
      if (Value.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Value);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Key.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
      }
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WebApiAsScalarTileConfig_Source_Header other) {
      if (other == null) {
        return;
      }
      if (other.Key.Length != 0) {
        Key = other.Key;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Key = input.ReadString();
            break;
          }
          case 18: {
            Value = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class WebApiAsScalarTileConfig_Source_Data : pb::IMessage<WebApiAsScalarTileConfig_Source_Data> {
    private static readonly pb::MessageParser<WebApiAsScalarTileConfig_Source_Data> _parser = new pb::MessageParser<WebApiAsScalarTileConfig_Source_Data>(() => new WebApiAsScalarTileConfig_Source_Data());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WebApiAsScalarTileConfig_Source_Data> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SquaredUp.Dashboard.Schema.WebReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebApiAsScalarTileConfig_Source_Data() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebApiAsScalarTileConfig_Source_Data(WebApiAsScalarTileConfig_Source_Data other) : this() {
      key_ = other.key_;
      value_ = other.value_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebApiAsScalarTileConfig_Source_Data Clone() {
      return new WebApiAsScalarTileConfig_Source_Data(this);
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 1;
    private string key_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Key {
      get { return key_; }
      set {
        key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private string value_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WebApiAsScalarTileConfig_Source_Data);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WebApiAsScalarTileConfig_Source_Data other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Key != other.Key) return false;
      if (Value != other.Value) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Key.Length != 0) hash ^= Key.GetHashCode();
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Key.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Key);
      }
      if (Value.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Value);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Key.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
      }
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WebApiAsScalarTileConfig_Source_Data other) {
      if (other == null) {
        return;
      }
      if (other.Key.Length != 0) {
        Key = other.Key;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Key = input.ReadString();
            break;
          }
          case 18: {
            Value = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class WebApiAsScalarTileConfig_Display : pb::IMessage<WebApiAsScalarTileConfig_Display> {
    private static readonly pb::MessageParser<WebApiAsScalarTileConfig_Display> _parser = new pb::MessageParser<WebApiAsScalarTileConfig_Display>(() => new WebApiAsScalarTileConfig_Display());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WebApiAsScalarTileConfig_Display> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SquaredUp.Dashboard.Schema.WebReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebApiAsScalarTileConfig_Display() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebApiAsScalarTileConfig_Display(WebApiAsScalarTileConfig_Display other) : this() {
      fontsize_ = other.fontsize_;
      coerceObject_ = other.coerceObject_;
      unit_ = other.unit_;
      zoom_ = other.zoom_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebApiAsScalarTileConfig_Display Clone() {
      return new WebApiAsScalarTileConfig_Display(this);
    }

    /// <summary>Field number for the "fontsize" field.</summary>
    public const int FontsizeFieldNumber = 1;
    private double fontsize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Fontsize {
      get { return fontsize_; }
      set {
        fontsize_ = value;
      }
    }

    /// <summary>Field number for the "coerce_object" field.</summary>
    public const int CoerceObjectFieldNumber = 2;
    private bool coerceObject_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CoerceObject {
      get { return coerceObject_; }
      set {
        coerceObject_ = value;
      }
    }

    /// <summary>Field number for the "unit" field.</summary>
    public const int UnitFieldNumber = 3;
    private string unit_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Unit {
      get { return unit_; }
      set {
        unit_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "zoom" field.</summary>
    public const int ZoomFieldNumber = 4;
    private string zoom_ = "";
    /// <summary>
    /// e.g. 'column'
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Zoom {
      get { return zoom_; }
      set {
        zoom_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WebApiAsScalarTileConfig_Display);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WebApiAsScalarTileConfig_Display other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Fontsize != other.Fontsize) return false;
      if (CoerceObject != other.CoerceObject) return false;
      if (Unit != other.Unit) return false;
      if (Zoom != other.Zoom) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Fontsize != 0D) hash ^= Fontsize.GetHashCode();
      if (CoerceObject != false) hash ^= CoerceObject.GetHashCode();
      if (Unit.Length != 0) hash ^= Unit.GetHashCode();
      if (Zoom.Length != 0) hash ^= Zoom.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Fontsize != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(Fontsize);
      }
      if (CoerceObject != false) {
        output.WriteRawTag(16);
        output.WriteBool(CoerceObject);
      }
      if (Unit.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Unit);
      }
      if (Zoom.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Zoom);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Fontsize != 0D) {
        size += 1 + 8;
      }
      if (CoerceObject != false) {
        size += 1 + 1;
      }
      if (Unit.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Unit);
      }
      if (Zoom.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Zoom);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WebApiAsScalarTileConfig_Display other) {
      if (other == null) {
        return;
      }
      if (other.Fontsize != 0D) {
        Fontsize = other.Fontsize;
      }
      if (other.CoerceObject != false) {
        CoerceObject = other.CoerceObject;
      }
      if (other.Unit.Length != 0) {
        Unit = other.Unit;
      }
      if (other.Zoom.Length != 0) {
        Zoom = other.Zoom;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 9: {
            Fontsize = input.ReadDouble();
            break;
          }
          case 16: {
            CoerceObject = input.ReadBool();
            break;
          }
          case 26: {
            Unit = input.ReadString();
            break;
          }
          case 34: {
            Zoom = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class WebApiAsTableTileConfig : pb::IMessage<WebApiAsTableTileConfig> {
    private static readonly pb::MessageParser<WebApiAsTableTileConfig> _parser = new pb::MessageParser<WebApiAsTableTileConfig>(() => new WebApiAsTableTileConfig());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WebApiAsTableTileConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SquaredUp.Dashboard.Schema.WebReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebApiAsTableTileConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebApiAsTableTileConfig(WebApiAsTableTileConfig other) : this() {
      Context = other.context_ != null ? other.Context.Clone() : null;
      Source = other.source_ != null ? other.Source.Clone() : null;
      Display = other.display_ != null ? other.Display.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebApiAsTableTileConfig Clone() {
      return new WebApiAsTableTileConfig(this);
    }

    /// <summary>Field number for the "context" field.</summary>
    public const int ContextFieldNumber = 1;
    private global::SquaredUp.Dashboard.Schema.WebApiAsTableTileConfig_Context context_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SquaredUp.Dashboard.Schema.WebApiAsTableTileConfig_Context Context {
      get { return context_; }
      set {
        context_ = value;
      }
    }

    /// <summary>Field number for the "source" field.</summary>
    public const int SourceFieldNumber = 2;
    private global::SquaredUp.Dashboard.Schema.WebApiAsTableTileConfig_Source source_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SquaredUp.Dashboard.Schema.WebApiAsTableTileConfig_Source Source {
      get { return source_; }
      set {
        source_ = value;
      }
    }

    /// <summary>Field number for the "display" field.</summary>
    public const int DisplayFieldNumber = 3;
    private global::SquaredUp.Dashboard.Schema.WebApiAsTableTileConfig_Display display_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SquaredUp.Dashboard.Schema.WebApiAsTableTileConfig_Display Display {
      get { return display_; }
      set {
        display_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WebApiAsTableTileConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WebApiAsTableTileConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Context, other.Context)) return false;
      if (!object.Equals(Source, other.Source)) return false;
      if (!object.Equals(Display, other.Display)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (context_ != null) hash ^= Context.GetHashCode();
      if (source_ != null) hash ^= Source.GetHashCode();
      if (display_ != null) hash ^= Display.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (context_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Context);
      }
      if (source_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Source);
      }
      if (display_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Display);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (context_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Context);
      }
      if (source_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Source);
      }
      if (display_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Display);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WebApiAsTableTileConfig other) {
      if (other == null) {
        return;
      }
      if (other.context_ != null) {
        if (context_ == null) {
          context_ = new global::SquaredUp.Dashboard.Schema.WebApiAsTableTileConfig_Context();
        }
        Context.MergeFrom(other.Context);
      }
      if (other.source_ != null) {
        if (source_ == null) {
          source_ = new global::SquaredUp.Dashboard.Schema.WebApiAsTableTileConfig_Source();
        }
        Source.MergeFrom(other.Source);
      }
      if (other.display_ != null) {
        if (display_ == null) {
          display_ = new global::SquaredUp.Dashboard.Schema.WebApiAsTableTileConfig_Display();
        }
        Display.MergeFrom(other.Display);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (context_ == null) {
              context_ = new global::SquaredUp.Dashboard.Schema.WebApiAsTableTileConfig_Context();
            }
            input.ReadMessage(context_);
            break;
          }
          case 18: {
            if (source_ == null) {
              source_ = new global::SquaredUp.Dashboard.Schema.WebApiAsTableTileConfig_Source();
            }
            input.ReadMessage(source_);
            break;
          }
          case 26: {
            if (display_ == null) {
              display_ = new global::SquaredUp.Dashboard.Schema.WebApiAsTableTileConfig_Display();
            }
            input.ReadMessage(display_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Empty
  /// </summary>
  public sealed partial class WebApiAsTableTileConfig_Context : pb::IMessage<WebApiAsTableTileConfig_Context> {
    private static readonly pb::MessageParser<WebApiAsTableTileConfig_Context> _parser = new pb::MessageParser<WebApiAsTableTileConfig_Context>(() => new WebApiAsTableTileConfig_Context());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WebApiAsTableTileConfig_Context> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SquaredUp.Dashboard.Schema.WebReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebApiAsTableTileConfig_Context() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebApiAsTableTileConfig_Context(WebApiAsTableTileConfig_Context other) : this() {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebApiAsTableTileConfig_Context Clone() {
      return new WebApiAsTableTileConfig_Context(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WebApiAsTableTileConfig_Context);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WebApiAsTableTileConfig_Context other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WebApiAsTableTileConfig_Context other) {
      if (other == null) {
        return;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  public sealed partial class WebApiAsTableTileConfig_Source : pb::IMessage<WebApiAsTableTileConfig_Source> {
    private static readonly pb::MessageParser<WebApiAsTableTileConfig_Source> _parser = new pb::MessageParser<WebApiAsTableTileConfig_Source>(() => new WebApiAsTableTileConfig_Source());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WebApiAsTableTileConfig_Source> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SquaredUp.Dashboard.Schema.WebReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebApiAsTableTileConfig_Source() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebApiAsTableTileConfig_Source(WebApiAsTableTileConfig_Source other) : this() {
      Security_ = other.Security_;
      method_ = other.method_;
      provider_ = other.provider_;
      url_ = other.url_;
      keypath_ = other.keypath_;
      headers_ = other.headers_.Clone();
      data_ = other.data_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebApiAsTableTileConfig_Source Clone() {
      return new WebApiAsTableTileConfig_Source(this);
    }

    /// <summary>Field number for the "_security" field.</summary>
    public const int SecurityFieldNumber = 1;
    private string Security_ = "";
    /// <summary>
    /// Typically "signing"
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Security {
      get { return Security_; }
      set {
        Security_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "method" field.</summary>
    public const int MethodFieldNumber = 2;
    private string method_ = "";
    /// <summary>
    /// GET or POST
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Method {
      get { return method_; }
      set {
        method_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "provider" field.</summary>
    public const int ProviderFieldNumber = 3;
    private string provider_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Provider {
      get { return provider_; }
      set {
        provider_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 4;
    private string url_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Url {
      get { return url_; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "keypath" field.</summary>
    public const int KeypathFieldNumber = 5;
    private string keypath_ = "";
    /// <summary>
    /// Keypath from response
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Keypath {
      get { return keypath_; }
      set {
        keypath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "headers" field.</summary>
    public const int HeadersFieldNumber = 6;
    private static readonly pb::FieldCodec<global::SquaredUp.Dashboard.Schema.WebApiAsTableTileConfig_Source_Header> _repeated_headers_codec
        = pb::FieldCodec.ForMessage(50, global::SquaredUp.Dashboard.Schema.WebApiAsTableTileConfig_Source_Header.Parser);
    private readonly pbc::RepeatedField<global::SquaredUp.Dashboard.Schema.WebApiAsTableTileConfig_Source_Header> headers_ = new pbc::RepeatedField<global::SquaredUp.Dashboard.Schema.WebApiAsTableTileConfig_Source_Header>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SquaredUp.Dashboard.Schema.WebApiAsTableTileConfig_Source_Header> Headers {
      get { return headers_; }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 7;
    private static readonly pb::FieldCodec<global::SquaredUp.Dashboard.Schema.WebApiAsTableTileConfig_Source_Data> _repeated_data_codec
        = pb::FieldCodec.ForMessage(58, global::SquaredUp.Dashboard.Schema.WebApiAsTableTileConfig_Source_Data.Parser);
    private readonly pbc::RepeatedField<global::SquaredUp.Dashboard.Schema.WebApiAsTableTileConfig_Source_Data> data_ = new pbc::RepeatedField<global::SquaredUp.Dashboard.Schema.WebApiAsTableTileConfig_Source_Data>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SquaredUp.Dashboard.Schema.WebApiAsTableTileConfig_Source_Data> Data {
      get { return data_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WebApiAsTableTileConfig_Source);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WebApiAsTableTileConfig_Source other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Security != other.Security) return false;
      if (Method != other.Method) return false;
      if (Provider != other.Provider) return false;
      if (Url != other.Url) return false;
      if (Keypath != other.Keypath) return false;
      if(!headers_.Equals(other.headers_)) return false;
      if(!data_.Equals(other.data_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Security.Length != 0) hash ^= Security.GetHashCode();
      if (Method.Length != 0) hash ^= Method.GetHashCode();
      if (Provider.Length != 0) hash ^= Provider.GetHashCode();
      if (Url.Length != 0) hash ^= Url.GetHashCode();
      if (Keypath.Length != 0) hash ^= Keypath.GetHashCode();
      hash ^= headers_.GetHashCode();
      hash ^= data_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Security.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Security);
      }
      if (Method.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Method);
      }
      if (Provider.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Provider);
      }
      if (Url.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Url);
      }
      if (Keypath.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Keypath);
      }
      headers_.WriteTo(output, _repeated_headers_codec);
      data_.WriteTo(output, _repeated_data_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Security.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Security);
      }
      if (Method.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Method);
      }
      if (Provider.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Provider);
      }
      if (Url.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      if (Keypath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Keypath);
      }
      size += headers_.CalculateSize(_repeated_headers_codec);
      size += data_.CalculateSize(_repeated_data_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WebApiAsTableTileConfig_Source other) {
      if (other == null) {
        return;
      }
      if (other.Security.Length != 0) {
        Security = other.Security;
      }
      if (other.Method.Length != 0) {
        Method = other.Method;
      }
      if (other.Provider.Length != 0) {
        Provider = other.Provider;
      }
      if (other.Url.Length != 0) {
        Url = other.Url;
      }
      if (other.Keypath.Length != 0) {
        Keypath = other.Keypath;
      }
      headers_.Add(other.headers_);
      data_.Add(other.data_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Security = input.ReadString();
            break;
          }
          case 18: {
            Method = input.ReadString();
            break;
          }
          case 26: {
            Provider = input.ReadString();
            break;
          }
          case 34: {
            Url = input.ReadString();
            break;
          }
          case 42: {
            Keypath = input.ReadString();
            break;
          }
          case 50: {
            headers_.AddEntriesFrom(input, _repeated_headers_codec);
            break;
          }
          case 58: {
            data_.AddEntriesFrom(input, _repeated_data_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class WebApiAsTableTileConfig_Source_Header : pb::IMessage<WebApiAsTableTileConfig_Source_Header> {
    private static readonly pb::MessageParser<WebApiAsTableTileConfig_Source_Header> _parser = new pb::MessageParser<WebApiAsTableTileConfig_Source_Header>(() => new WebApiAsTableTileConfig_Source_Header());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WebApiAsTableTileConfig_Source_Header> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SquaredUp.Dashboard.Schema.WebReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebApiAsTableTileConfig_Source_Header() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebApiAsTableTileConfig_Source_Header(WebApiAsTableTileConfig_Source_Header other) : this() {
      key_ = other.key_;
      value_ = other.value_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebApiAsTableTileConfig_Source_Header Clone() {
      return new WebApiAsTableTileConfig_Source_Header(this);
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 1;
    private string key_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Key {
      get { return key_; }
      set {
        key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private string value_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WebApiAsTableTileConfig_Source_Header);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WebApiAsTableTileConfig_Source_Header other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Key != other.Key) return false;
      if (Value != other.Value) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Key.Length != 0) hash ^= Key.GetHashCode();
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Key.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Key);
      }
      if (Value.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Value);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Key.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
      }
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WebApiAsTableTileConfig_Source_Header other) {
      if (other == null) {
        return;
      }
      if (other.Key.Length != 0) {
        Key = other.Key;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Key = input.ReadString();
            break;
          }
          case 18: {
            Value = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class WebApiAsTableTileConfig_Source_Data : pb::IMessage<WebApiAsTableTileConfig_Source_Data> {
    private static readonly pb::MessageParser<WebApiAsTableTileConfig_Source_Data> _parser = new pb::MessageParser<WebApiAsTableTileConfig_Source_Data>(() => new WebApiAsTableTileConfig_Source_Data());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WebApiAsTableTileConfig_Source_Data> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SquaredUp.Dashboard.Schema.WebReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebApiAsTableTileConfig_Source_Data() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebApiAsTableTileConfig_Source_Data(WebApiAsTableTileConfig_Source_Data other) : this() {
      key_ = other.key_;
      value_ = other.value_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebApiAsTableTileConfig_Source_Data Clone() {
      return new WebApiAsTableTileConfig_Source_Data(this);
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 1;
    private string key_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Key {
      get { return key_; }
      set {
        key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private string value_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WebApiAsTableTileConfig_Source_Data);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WebApiAsTableTileConfig_Source_Data other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Key != other.Key) return false;
      if (Value != other.Value) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Key.Length != 0) hash ^= Key.GetHashCode();
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Key.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Key);
      }
      if (Value.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Value);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Key.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
      }
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WebApiAsTableTileConfig_Source_Data other) {
      if (other == null) {
        return;
      }
      if (other.Key.Length != 0) {
        Key = other.Key;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Key = input.ReadString();
            break;
          }
          case 18: {
            Value = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class WebApiAsTableTileConfig_Display : pb::IMessage<WebApiAsTableTileConfig_Display> {
    private static readonly pb::MessageParser<WebApiAsTableTileConfig_Display> _parser = new pb::MessageParser<WebApiAsTableTileConfig_Display>(() => new WebApiAsTableTileConfig_Display());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WebApiAsTableTileConfig_Display> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SquaredUp.Dashboard.Schema.WebReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebApiAsTableTileConfig_Display() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebApiAsTableTileConfig_Display(WebApiAsTableTileConfig_Display other) : this() {
      showHeaders_ = other.showHeaders_;
      columnOverrides_ = other.columnOverrides_.Clone();
      customColumns_ = other.customColumns_.Clone();
      columns_ = other.columns_.Clone();
      autohide_ = other.autohide_;
      rowLink_ = other.rowLink_;
      zoom_ = other.zoom_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebApiAsTableTileConfig_Display Clone() {
      return new WebApiAsTableTileConfig_Display(this);
    }

    /// <summary>Field number for the "show_headers" field.</summary>
    public const int ShowHeadersFieldNumber = 1;
    private bool showHeaders_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ShowHeaders {
      get { return showHeaders_; }
      set {
        showHeaders_ = value;
      }
    }

    /// <summary>Field number for the "column_overrides" field.</summary>
    public const int ColumnOverridesFieldNumber = 2;
    private static readonly pbc::MapField<string, global::SquaredUp.Dashboard.Schema.WebApiAsTableTileConfig_ColumnOverride>.Codec _map_columnOverrides_codec
        = new pbc::MapField<string, global::SquaredUp.Dashboard.Schema.WebApiAsTableTileConfig_ColumnOverride>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForMessage(18, global::SquaredUp.Dashboard.Schema.WebApiAsTableTileConfig_ColumnOverride.Parser), 18);
    private readonly pbc::MapField<string, global::SquaredUp.Dashboard.Schema.WebApiAsTableTileConfig_ColumnOverride> columnOverrides_ = new pbc::MapField<string, global::SquaredUp.Dashboard.Schema.WebApiAsTableTileConfig_ColumnOverride>();
    /// <summary>
    /// Column template overrides
    /// name -> override data
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::SquaredUp.Dashboard.Schema.WebApiAsTableTileConfig_ColumnOverride> ColumnOverrides {
      get { return columnOverrides_; }
    }

    /// <summary>Field number for the "custom_columns" field.</summary>
    public const int CustomColumnsFieldNumber = 3;
    private static readonly pbc::MapField<string, string>.Codec _map_customColumns_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 26);
    private readonly pbc::MapField<string, string> customColumns_ = new pbc::MapField<string, string>();
    /// <summary>
    /// Custom columns
    /// internal name (e.g. custom_column) -> data key path
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> CustomColumns {
      get { return customColumns_; }
    }

    /// <summary>Field number for the "columns" field.</summary>
    public const int ColumnsFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_columns_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> columns_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// List/order of each column
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Columns {
      get { return columns_; }
    }

    /// <summary>Field number for the "autohide" field.</summary>
    public const int AutohideFieldNumber = 5;
    private bool autohide_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Autohide {
      get { return autohide_; }
      set {
        autohide_ = value;
      }
    }

    /// <summary>Field number for the "row_link" field.</summary>
    public const int RowLinkFieldNumber = 6;
    private string rowLink_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RowLink {
      get { return rowLink_; }
      set {
        rowLink_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "zoom" field.</summary>
    public const int ZoomFieldNumber = 7;
    private string zoom_ = "";
    /// <summary>
    /// e.g. 'column'
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Zoom {
      get { return zoom_; }
      set {
        zoom_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WebApiAsTableTileConfig_Display);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WebApiAsTableTileConfig_Display other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ShowHeaders != other.ShowHeaders) return false;
      if (!ColumnOverrides.Equals(other.ColumnOverrides)) return false;
      if (!CustomColumns.Equals(other.CustomColumns)) return false;
      if(!columns_.Equals(other.columns_)) return false;
      if (Autohide != other.Autohide) return false;
      if (RowLink != other.RowLink) return false;
      if (Zoom != other.Zoom) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ShowHeaders != false) hash ^= ShowHeaders.GetHashCode();
      hash ^= ColumnOverrides.GetHashCode();
      hash ^= CustomColumns.GetHashCode();
      hash ^= columns_.GetHashCode();
      if (Autohide != false) hash ^= Autohide.GetHashCode();
      if (RowLink.Length != 0) hash ^= RowLink.GetHashCode();
      if (Zoom.Length != 0) hash ^= Zoom.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ShowHeaders != false) {
        output.WriteRawTag(8);
        output.WriteBool(ShowHeaders);
      }
      columnOverrides_.WriteTo(output, _map_columnOverrides_codec);
      customColumns_.WriteTo(output, _map_customColumns_codec);
      columns_.WriteTo(output, _repeated_columns_codec);
      if (Autohide != false) {
        output.WriteRawTag(40);
        output.WriteBool(Autohide);
      }
      if (RowLink.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(RowLink);
      }
      if (Zoom.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Zoom);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ShowHeaders != false) {
        size += 1 + 1;
      }
      size += columnOverrides_.CalculateSize(_map_columnOverrides_codec);
      size += customColumns_.CalculateSize(_map_customColumns_codec);
      size += columns_.CalculateSize(_repeated_columns_codec);
      if (Autohide != false) {
        size += 1 + 1;
      }
      if (RowLink.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RowLink);
      }
      if (Zoom.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Zoom);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WebApiAsTableTileConfig_Display other) {
      if (other == null) {
        return;
      }
      if (other.ShowHeaders != false) {
        ShowHeaders = other.ShowHeaders;
      }
      columnOverrides_.Add(other.columnOverrides_);
      customColumns_.Add(other.customColumns_);
      columns_.Add(other.columns_);
      if (other.Autohide != false) {
        Autohide = other.Autohide;
      }
      if (other.RowLink.Length != 0) {
        RowLink = other.RowLink;
      }
      if (other.Zoom.Length != 0) {
        Zoom = other.Zoom;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            ShowHeaders = input.ReadBool();
            break;
          }
          case 18: {
            columnOverrides_.AddEntriesFrom(input, _map_columnOverrides_codec);
            break;
          }
          case 26: {
            customColumns_.AddEntriesFrom(input, _map_customColumns_codec);
            break;
          }
          case 34: {
            columns_.AddEntriesFrom(input, _repeated_columns_codec);
            break;
          }
          case 40: {
            Autohide = input.ReadBool();
            break;
          }
          case 50: {
            RowLink = input.ReadString();
            break;
          }
          case 58: {
            Zoom = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class WebApiAsTableTileConfig_ColumnOverride : pb::IMessage<WebApiAsTableTileConfig_ColumnOverride> {
    private static readonly pb::MessageParser<WebApiAsTableTileConfig_ColumnOverride> _parser = new pb::MessageParser<WebApiAsTableTileConfig_ColumnOverride>(() => new WebApiAsTableTileConfig_ColumnOverride());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WebApiAsTableTileConfig_ColumnOverride> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SquaredUp.Dashboard.Schema.WebReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebApiAsTableTileConfig_ColumnOverride() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebApiAsTableTileConfig_ColumnOverride(WebApiAsTableTileConfig_ColumnOverride other) : this() {
      template_ = other.template_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebApiAsTableTileConfig_ColumnOverride Clone() {
      return new WebApiAsTableTileConfig_ColumnOverride(this);
    }

    /// <summary>Field number for the "template" field.</summary>
    public const int TemplateFieldNumber = 1;
    private string template_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Template {
      get { return template_; }
      set {
        template_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WebApiAsTableTileConfig_ColumnOverride);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WebApiAsTableTileConfig_ColumnOverride other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Template != other.Template) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Template.Length != 0) hash ^= Template.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Template.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Template);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Template.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Template);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WebApiAsTableTileConfig_ColumnOverride other) {
      if (other == null) {
        return;
      }
      if (other.Template.Length != 0) {
        Template = other.Template;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Template = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
