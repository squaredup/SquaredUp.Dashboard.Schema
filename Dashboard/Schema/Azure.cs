// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: azure.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace SquaredUp.Dashboard.Schema {

  /// <summary>Holder for reflection information generated from azure.proto</summary>
  public static partial class AzureReflection {

    #region Descriptor
    /// <summary>File descriptor for azure.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AzureReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgthenVyZS5wcm90bxIJc3F1YXJlZHVwGhxnb29nbGUvcHJvdG9idWYvc3Ry",
            "dWN0LnByb3RvGg1jb250ZXh0LnByb3RvIu4BCh9BenVyZUluc2lnaHRzQXNT",
            "Y2FsYXJUaWxlQ29uZmlnEkEKBnNvdXJjZRgBIAEoCzIxLnNxdWFyZWR1cC5B",
            "enVyZUluc2lnaHRzQXNTY2FsYXJUaWxlQ29uZmlnX1NvdXJjZRJDCgdkaXNw",
            "bGF5GAIgASgLMjIuc3F1YXJlZHVwLkF6dXJlSW5zaWdodHNBc1NjYWxhclRp",
            "bGVDb25maWdfRGlzcGxheRJDCgdjb250ZXh0GAMgASgLMjIuc3F1YXJlZHVw",
            "LkF6dXJlSW5zaWdodHNBc1NjYWxhclRpbGVDb25maWdfQ29udGV4dCIpCidB",
            "enVyZUluc2lnaHRzQXNTY2FsYXJUaWxlQ29uZmlnX0NvbnRleHQidgomQXp1",
            "cmVJbnNpZ2h0c0FzU2NhbGFyVGlsZUNvbmZpZ19Tb3VyY2USEwoLY29udGVu",
            "dEJvZHkYASABKAkSDgoGbWV0aG9kGAIgASgJEhQKDGNvbnRlbnRfdHlwZRgD",
            "IAEoCRIRCglfc2VjdXJpdHkYBCABKAkiYAonQXp1cmVJbnNpZ2h0c0FzU2Nh",
            "bGFyVGlsZUNvbmZpZ19EaXNwbGF5EhAKCGZvbnRzaXplGAEgASgBEhUKDWNv",
            "ZXJjZV9vYmplY3QYAiABKAgSDAoEem9vbRgDIAEoCSLqAQoeQXp1cmVJbnNp",
            "Z2h0c0FzVGFibGVUaWxlQ29uZmlnEkAKBnNvdXJjZRgBIAEoCzIwLnNxdWFy",
            "ZWR1cC5BenVyZUluc2lnaHRzQXNUYWJsZVRpbGVDb25maWdfU291cmNlEkIK",
            "B2Rpc3BsYXkYAiABKAsyMS5zcXVhcmVkdXAuQXp1cmVJbnNpZ2h0c0FzVGFi",
            "bGVUaWxlQ29uZmlnX0Rpc3BsYXkSQgoHY29udGV4dBgDIAEoCzIxLnNxdWFy",
            "ZWR1cC5BenVyZUluc2lnaHRzQXNUYWJsZVRpbGVDb25maWdfQ29udGV4dCIo",
            "CiZBenVyZUluc2lnaHRzQXNUYWJsZVRpbGVDb25maWdfQ29udGV4dCJ1CiVB",
            "enVyZUluc2lnaHRzQXNUYWJsZVRpbGVDb25maWdfU291cmNlEhMKC2NvbnRl",
            "bnRCb2R5GAEgASgJEg4KBm1ldGhvZBgCIAEoCRIUCgxjb250ZW50X3R5cGUY",
            "AyABKAkSEQoJX3NlY3VyaXR5GAQgASgJIkwKJkF6dXJlSW5zaWdodHNBc1Rh",
            "YmxlVGlsZUNvbmZpZ19EaXNwbGF5EhQKDHNob3dfaGVhZGVycxgBIAEoCBIM",
            "CgR6b29tGAIgASgJIv4BCiNBenVyZUxvZ0FuYWx5dGljc0FzU2NhbGFyVGls",
            "ZUNvbmZpZxJFCgZzb3VyY2UYASABKAsyNS5zcXVhcmVkdXAuQXp1cmVMb2dB",
            "bmFseXRpY3NBc1NjYWxhclRpbGVDb25maWdfU291cmNlEkcKB2Rpc3BsYXkY",
            "AiABKAsyNi5zcXVhcmVkdXAuQXp1cmVMb2dBbmFseXRpY3NBc1NjYWxhclRp",
            "bGVDb25maWdfRGlzcGxheRJHCgdjb250ZXh0GAMgASgLMjYuc3F1YXJlZHVw",
            "LkF6dXJlTG9nQW5hbHl0aWNzQXNTY2FsYXJUaWxlQ29uZmlnX0NvbnRleHQi",
            "LQorQXp1cmVMb2dBbmFseXRpY3NBc1NjYWxhclRpbGVDb25maWdfQ29udGV4",
            "dCJ6CipBenVyZUxvZ0FuYWx5dGljc0FzU2NhbGFyVGlsZUNvbmZpZ19Tb3Vy",
            "Y2USEwoLY29udGVudEJvZHkYASABKAkSDgoGbWV0aG9kGAIgASgJEhQKDGNv",
            "bnRlbnRfdHlwZRgDIAEoCRIRCglfc2VjdXJpdHkYBCABKAkiZAorQXp1cmVM",
            "b2dBbmFseXRpY3NBc1NjYWxhclRpbGVDb25maWdfRGlzcGxheRIQCghmb250",
            "c2l6ZRgBIAEoARIVCg1jb2VyY2Vfb2JqZWN0GAIgASgIEgwKBHpvb20YAyAB",
            "KAki+gEKIkF6dXJlTG9nQW5hbHl0aWNzQXNUYWJsZVRpbGVDb25maWcSRAoG",
            "c291cmNlGAEgASgLMjQuc3F1YXJlZHVwLkF6dXJlTG9nQW5hbHl0aWNzQXNU",
            "YWJsZVRpbGVDb25maWdfU291cmNlEkYKB2Rpc3BsYXkYAiABKAsyNS5zcXVh",
            "cmVkdXAuQXp1cmVMb2dBbmFseXRpY3NBc1RhYmxlVGlsZUNvbmZpZ19EaXNw",
            "bGF5EkYKB2NvbnRleHQYAyABKAsyNS5zcXVhcmVkdXAuQXp1cmVMb2dBbmFs",
            "eXRpY3NBc1RhYmxlVGlsZUNvbmZpZ19Db250ZXh0IiwKKkF6dXJlTG9nQW5h",
            "bHl0aWNzQXNUYWJsZVRpbGVDb25maWdfQ29udGV4dCJ5CilBenVyZUxvZ0Fu",
            "YWx5dGljc0FzVGFibGVUaWxlQ29uZmlnX1NvdXJjZRITCgtjb250ZW50Qm9k",
            "eRgBIAEoCRIOCgZtZXRob2QYAiABKAkSFAoMY29udGVudF90eXBlGAMgASgJ",
            "EhEKCV9zZWN1cml0eRgEIAEoCSJQCipBenVyZUxvZ0FuYWx5dGljc0FzVGFi",
            "bGVUaWxlQ29uZmlnX0Rpc3BsYXkSFAoMc2hvd19oZWFkZXJzGAEgASgIEgwK",
            "BHpvb20YAiABKAlCHaoCGlNxdWFyZWRVcC5EYXNoYm9hcmQuU2NoZW1hYgZw",
            "cm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.StructReflection.Descriptor, global::SquaredUp.Dashboard.Schema.ContextReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::SquaredUp.Dashboard.Schema.AzureInsightsAsScalarTileConfig), global::SquaredUp.Dashboard.Schema.AzureInsightsAsScalarTileConfig.Parser, new[]{ "Source", "Display", "Context" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SquaredUp.Dashboard.Schema.AzureInsightsAsScalarTileConfig_Context), global::SquaredUp.Dashboard.Schema.AzureInsightsAsScalarTileConfig_Context.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SquaredUp.Dashboard.Schema.AzureInsightsAsScalarTileConfig_Source), global::SquaredUp.Dashboard.Schema.AzureInsightsAsScalarTileConfig_Source.Parser, new[]{ "ContentBody", "Method", "ContentType", "Security" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SquaredUp.Dashboard.Schema.AzureInsightsAsScalarTileConfig_Display), global::SquaredUp.Dashboard.Schema.AzureInsightsAsScalarTileConfig_Display.Parser, new[]{ "Fontsize", "CoerceObject", "Zoom" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SquaredUp.Dashboard.Schema.AzureInsightsAsTableTileConfig), global::SquaredUp.Dashboard.Schema.AzureInsightsAsTableTileConfig.Parser, new[]{ "Source", "Display", "Context" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SquaredUp.Dashboard.Schema.AzureInsightsAsTableTileConfig_Context), global::SquaredUp.Dashboard.Schema.AzureInsightsAsTableTileConfig_Context.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SquaredUp.Dashboard.Schema.AzureInsightsAsTableTileConfig_Source), global::SquaredUp.Dashboard.Schema.AzureInsightsAsTableTileConfig_Source.Parser, new[]{ "ContentBody", "Method", "ContentType", "Security" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SquaredUp.Dashboard.Schema.AzureInsightsAsTableTileConfig_Display), global::SquaredUp.Dashboard.Schema.AzureInsightsAsTableTileConfig_Display.Parser, new[]{ "ShowHeaders", "Zoom" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SquaredUp.Dashboard.Schema.AzureLogAnalyticsAsScalarTileConfig), global::SquaredUp.Dashboard.Schema.AzureLogAnalyticsAsScalarTileConfig.Parser, new[]{ "Source", "Display", "Context" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SquaredUp.Dashboard.Schema.AzureLogAnalyticsAsScalarTileConfig_Context), global::SquaredUp.Dashboard.Schema.AzureLogAnalyticsAsScalarTileConfig_Context.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SquaredUp.Dashboard.Schema.AzureLogAnalyticsAsScalarTileConfig_Source), global::SquaredUp.Dashboard.Schema.AzureLogAnalyticsAsScalarTileConfig_Source.Parser, new[]{ "ContentBody", "Method", "ContentType", "Security" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SquaredUp.Dashboard.Schema.AzureLogAnalyticsAsScalarTileConfig_Display), global::SquaredUp.Dashboard.Schema.AzureLogAnalyticsAsScalarTileConfig_Display.Parser, new[]{ "Fontsize", "CoerceObject", "Zoom" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SquaredUp.Dashboard.Schema.AzureLogAnalyticsAsTableTileConfig), global::SquaredUp.Dashboard.Schema.AzureLogAnalyticsAsTableTileConfig.Parser, new[]{ "Source", "Display", "Context" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SquaredUp.Dashboard.Schema.AzureLogAnalyticsAsTableTileConfig_Context), global::SquaredUp.Dashboard.Schema.AzureLogAnalyticsAsTableTileConfig_Context.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SquaredUp.Dashboard.Schema.AzureLogAnalyticsAsTableTileConfig_Source), global::SquaredUp.Dashboard.Schema.AzureLogAnalyticsAsTableTileConfig_Source.Parser, new[]{ "ContentBody", "Method", "ContentType", "Security" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SquaredUp.Dashboard.Schema.AzureLogAnalyticsAsTableTileConfig_Display), global::SquaredUp.Dashboard.Schema.AzureLogAnalyticsAsTableTileConfig_Display.Parser, new[]{ "ShowHeaders", "Zoom" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// tile/azureappinsights-as-scalar
  /// </summary>
  public sealed partial class AzureInsightsAsScalarTileConfig : pb::IMessage<AzureInsightsAsScalarTileConfig> {
    private static readonly pb::MessageParser<AzureInsightsAsScalarTileConfig> _parser = new pb::MessageParser<AzureInsightsAsScalarTileConfig>(() => new AzureInsightsAsScalarTileConfig());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AzureInsightsAsScalarTileConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SquaredUp.Dashboard.Schema.AzureReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AzureInsightsAsScalarTileConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AzureInsightsAsScalarTileConfig(AzureInsightsAsScalarTileConfig other) : this() {
      Source = other.source_ != null ? other.Source.Clone() : null;
      Display = other.display_ != null ? other.Display.Clone() : null;
      Context = other.context_ != null ? other.Context.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AzureInsightsAsScalarTileConfig Clone() {
      return new AzureInsightsAsScalarTileConfig(this);
    }

    /// <summary>Field number for the "source" field.</summary>
    public const int SourceFieldNumber = 1;
    private global::SquaredUp.Dashboard.Schema.AzureInsightsAsScalarTileConfig_Source source_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SquaredUp.Dashboard.Schema.AzureInsightsAsScalarTileConfig_Source Source {
      get { return source_; }
      set {
        source_ = value;
      }
    }

    /// <summary>Field number for the "display" field.</summary>
    public const int DisplayFieldNumber = 2;
    private global::SquaredUp.Dashboard.Schema.AzureInsightsAsScalarTileConfig_Display display_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SquaredUp.Dashboard.Schema.AzureInsightsAsScalarTileConfig_Display Display {
      get { return display_; }
      set {
        display_ = value;
      }
    }

    /// <summary>Field number for the "context" field.</summary>
    public const int ContextFieldNumber = 3;
    private global::SquaredUp.Dashboard.Schema.AzureInsightsAsScalarTileConfig_Context context_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SquaredUp.Dashboard.Schema.AzureInsightsAsScalarTileConfig_Context Context {
      get { return context_; }
      set {
        context_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AzureInsightsAsScalarTileConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AzureInsightsAsScalarTileConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Source, other.Source)) return false;
      if (!object.Equals(Display, other.Display)) return false;
      if (!object.Equals(Context, other.Context)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (source_ != null) hash ^= Source.GetHashCode();
      if (display_ != null) hash ^= Display.GetHashCode();
      if (context_ != null) hash ^= Context.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (source_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Source);
      }
      if (display_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Display);
      }
      if (context_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Context);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (source_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Source);
      }
      if (display_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Display);
      }
      if (context_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Context);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AzureInsightsAsScalarTileConfig other) {
      if (other == null) {
        return;
      }
      if (other.source_ != null) {
        if (source_ == null) {
          source_ = new global::SquaredUp.Dashboard.Schema.AzureInsightsAsScalarTileConfig_Source();
        }
        Source.MergeFrom(other.Source);
      }
      if (other.display_ != null) {
        if (display_ == null) {
          display_ = new global::SquaredUp.Dashboard.Schema.AzureInsightsAsScalarTileConfig_Display();
        }
        Display.MergeFrom(other.Display);
      }
      if (other.context_ != null) {
        if (context_ == null) {
          context_ = new global::SquaredUp.Dashboard.Schema.AzureInsightsAsScalarTileConfig_Context();
        }
        Context.MergeFrom(other.Context);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (source_ == null) {
              source_ = new global::SquaredUp.Dashboard.Schema.AzureInsightsAsScalarTileConfig_Source();
            }
            input.ReadMessage(source_);
            break;
          }
          case 18: {
            if (display_ == null) {
              display_ = new global::SquaredUp.Dashboard.Schema.AzureInsightsAsScalarTileConfig_Display();
            }
            input.ReadMessage(display_);
            break;
          }
          case 26: {
            if (context_ == null) {
              context_ = new global::SquaredUp.Dashboard.Schema.AzureInsightsAsScalarTileConfig_Context();
            }
            input.ReadMessage(context_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AzureInsightsAsScalarTileConfig_Context : pb::IMessage<AzureInsightsAsScalarTileConfig_Context> {
    private static readonly pb::MessageParser<AzureInsightsAsScalarTileConfig_Context> _parser = new pb::MessageParser<AzureInsightsAsScalarTileConfig_Context>(() => new AzureInsightsAsScalarTileConfig_Context());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AzureInsightsAsScalarTileConfig_Context> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SquaredUp.Dashboard.Schema.AzureReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AzureInsightsAsScalarTileConfig_Context() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AzureInsightsAsScalarTileConfig_Context(AzureInsightsAsScalarTileConfig_Context other) : this() {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AzureInsightsAsScalarTileConfig_Context Clone() {
      return new AzureInsightsAsScalarTileConfig_Context(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AzureInsightsAsScalarTileConfig_Context);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AzureInsightsAsScalarTileConfig_Context other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AzureInsightsAsScalarTileConfig_Context other) {
      if (other == null) {
        return;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  public sealed partial class AzureInsightsAsScalarTileConfig_Source : pb::IMessage<AzureInsightsAsScalarTileConfig_Source> {
    private static readonly pb::MessageParser<AzureInsightsAsScalarTileConfig_Source> _parser = new pb::MessageParser<AzureInsightsAsScalarTileConfig_Source>(() => new AzureInsightsAsScalarTileConfig_Source());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AzureInsightsAsScalarTileConfig_Source> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SquaredUp.Dashboard.Schema.AzureReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AzureInsightsAsScalarTileConfig_Source() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AzureInsightsAsScalarTileConfig_Source(AzureInsightsAsScalarTileConfig_Source other) : this() {
      contentBody_ = other.contentBody_;
      method_ = other.method_;
      contentType_ = other.contentType_;
      Security_ = other.Security_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AzureInsightsAsScalarTileConfig_Source Clone() {
      return new AzureInsightsAsScalarTileConfig_Source(this);
    }

    /// <summary>Field number for the "contentBody" field.</summary>
    public const int ContentBodyFieldNumber = 1;
    private string contentBody_ = "";
    /// <summary>
    /// Content of the query body 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContentBody {
      get { return contentBody_; }
      set {
        contentBody_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "method" field.</summary>
    public const int MethodFieldNumber = 2;
    private string method_ = "";
    /// <summary>
    /// Method e.g. POST
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Method {
      get { return method_; }
      set {
        method_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "content_type" field.</summary>
    public const int ContentTypeFieldNumber = 3;
    private string contentType_ = "";
    /// <summary>
    /// e.g. application/json
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContentType {
      get { return contentType_; }
      set {
        contentType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "_security" field.</summary>
    public const int SecurityFieldNumber = 4;
    private string Security_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Security {
      get { return Security_; }
      set {
        Security_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AzureInsightsAsScalarTileConfig_Source);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AzureInsightsAsScalarTileConfig_Source other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ContentBody != other.ContentBody) return false;
      if (Method != other.Method) return false;
      if (ContentType != other.ContentType) return false;
      if (Security != other.Security) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ContentBody.Length != 0) hash ^= ContentBody.GetHashCode();
      if (Method.Length != 0) hash ^= Method.GetHashCode();
      if (ContentType.Length != 0) hash ^= ContentType.GetHashCode();
      if (Security.Length != 0) hash ^= Security.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ContentBody.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ContentBody);
      }
      if (Method.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Method);
      }
      if (ContentType.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ContentType);
      }
      if (Security.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Security);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ContentBody.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContentBody);
      }
      if (Method.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Method);
      }
      if (ContentType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContentType);
      }
      if (Security.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Security);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AzureInsightsAsScalarTileConfig_Source other) {
      if (other == null) {
        return;
      }
      if (other.ContentBody.Length != 0) {
        ContentBody = other.ContentBody;
      }
      if (other.Method.Length != 0) {
        Method = other.Method;
      }
      if (other.ContentType.Length != 0) {
        ContentType = other.ContentType;
      }
      if (other.Security.Length != 0) {
        Security = other.Security;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            ContentBody = input.ReadString();
            break;
          }
          case 18: {
            Method = input.ReadString();
            break;
          }
          case 26: {
            ContentType = input.ReadString();
            break;
          }
          case 34: {
            Security = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AzureInsightsAsScalarTileConfig_Display : pb::IMessage<AzureInsightsAsScalarTileConfig_Display> {
    private static readonly pb::MessageParser<AzureInsightsAsScalarTileConfig_Display> _parser = new pb::MessageParser<AzureInsightsAsScalarTileConfig_Display>(() => new AzureInsightsAsScalarTileConfig_Display());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AzureInsightsAsScalarTileConfig_Display> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SquaredUp.Dashboard.Schema.AzureReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AzureInsightsAsScalarTileConfig_Display() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AzureInsightsAsScalarTileConfig_Display(AzureInsightsAsScalarTileConfig_Display other) : this() {
      fontsize_ = other.fontsize_;
      coerceObject_ = other.coerceObject_;
      zoom_ = other.zoom_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AzureInsightsAsScalarTileConfig_Display Clone() {
      return new AzureInsightsAsScalarTileConfig_Display(this);
    }

    /// <summary>Field number for the "fontsize" field.</summary>
    public const int FontsizeFieldNumber = 1;
    private double fontsize_;
    /// <summary>
    /// Font size (!! naming convention incorrect !!)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Fontsize {
      get { return fontsize_; }
      set {
        fontsize_ = value;
      }
    }

    /// <summary>Field number for the "coerce_object" field.</summary>
    public const int CoerceObjectFieldNumber = 2;
    private bool coerceObject_;
    /// <summary>
    /// Whether to coerce objects 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CoerceObject {
      get { return coerceObject_; }
      set {
        coerceObject_ = value;
      }
    }

    /// <summary>Field number for the "zoom" field.</summary>
    public const int ZoomFieldNumber = 3;
    private string zoom_ = "";
    /// <summary>
    /// e.g. 'column'
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Zoom {
      get { return zoom_; }
      set {
        zoom_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AzureInsightsAsScalarTileConfig_Display);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AzureInsightsAsScalarTileConfig_Display other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Fontsize != other.Fontsize) return false;
      if (CoerceObject != other.CoerceObject) return false;
      if (Zoom != other.Zoom) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Fontsize != 0D) hash ^= Fontsize.GetHashCode();
      if (CoerceObject != false) hash ^= CoerceObject.GetHashCode();
      if (Zoom.Length != 0) hash ^= Zoom.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Fontsize != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(Fontsize);
      }
      if (CoerceObject != false) {
        output.WriteRawTag(16);
        output.WriteBool(CoerceObject);
      }
      if (Zoom.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Zoom);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Fontsize != 0D) {
        size += 1 + 8;
      }
      if (CoerceObject != false) {
        size += 1 + 1;
      }
      if (Zoom.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Zoom);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AzureInsightsAsScalarTileConfig_Display other) {
      if (other == null) {
        return;
      }
      if (other.Fontsize != 0D) {
        Fontsize = other.Fontsize;
      }
      if (other.CoerceObject != false) {
        CoerceObject = other.CoerceObject;
      }
      if (other.Zoom.Length != 0) {
        Zoom = other.Zoom;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 9: {
            Fontsize = input.ReadDouble();
            break;
          }
          case 16: {
            CoerceObject = input.ReadBool();
            break;
          }
          case 26: {
            Zoom = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// tile/azureappinsights-as-table
  /// </summary>
  public sealed partial class AzureInsightsAsTableTileConfig : pb::IMessage<AzureInsightsAsTableTileConfig> {
    private static readonly pb::MessageParser<AzureInsightsAsTableTileConfig> _parser = new pb::MessageParser<AzureInsightsAsTableTileConfig>(() => new AzureInsightsAsTableTileConfig());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AzureInsightsAsTableTileConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SquaredUp.Dashboard.Schema.AzureReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AzureInsightsAsTableTileConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AzureInsightsAsTableTileConfig(AzureInsightsAsTableTileConfig other) : this() {
      Source = other.source_ != null ? other.Source.Clone() : null;
      Display = other.display_ != null ? other.Display.Clone() : null;
      Context = other.context_ != null ? other.Context.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AzureInsightsAsTableTileConfig Clone() {
      return new AzureInsightsAsTableTileConfig(this);
    }

    /// <summary>Field number for the "source" field.</summary>
    public const int SourceFieldNumber = 1;
    private global::SquaredUp.Dashboard.Schema.AzureInsightsAsTableTileConfig_Source source_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SquaredUp.Dashboard.Schema.AzureInsightsAsTableTileConfig_Source Source {
      get { return source_; }
      set {
        source_ = value;
      }
    }

    /// <summary>Field number for the "display" field.</summary>
    public const int DisplayFieldNumber = 2;
    private global::SquaredUp.Dashboard.Schema.AzureInsightsAsTableTileConfig_Display display_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SquaredUp.Dashboard.Schema.AzureInsightsAsTableTileConfig_Display Display {
      get { return display_; }
      set {
        display_ = value;
      }
    }

    /// <summary>Field number for the "context" field.</summary>
    public const int ContextFieldNumber = 3;
    private global::SquaredUp.Dashboard.Schema.AzureInsightsAsTableTileConfig_Context context_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SquaredUp.Dashboard.Schema.AzureInsightsAsTableTileConfig_Context Context {
      get { return context_; }
      set {
        context_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AzureInsightsAsTableTileConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AzureInsightsAsTableTileConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Source, other.Source)) return false;
      if (!object.Equals(Display, other.Display)) return false;
      if (!object.Equals(Context, other.Context)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (source_ != null) hash ^= Source.GetHashCode();
      if (display_ != null) hash ^= Display.GetHashCode();
      if (context_ != null) hash ^= Context.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (source_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Source);
      }
      if (display_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Display);
      }
      if (context_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Context);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (source_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Source);
      }
      if (display_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Display);
      }
      if (context_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Context);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AzureInsightsAsTableTileConfig other) {
      if (other == null) {
        return;
      }
      if (other.source_ != null) {
        if (source_ == null) {
          source_ = new global::SquaredUp.Dashboard.Schema.AzureInsightsAsTableTileConfig_Source();
        }
        Source.MergeFrom(other.Source);
      }
      if (other.display_ != null) {
        if (display_ == null) {
          display_ = new global::SquaredUp.Dashboard.Schema.AzureInsightsAsTableTileConfig_Display();
        }
        Display.MergeFrom(other.Display);
      }
      if (other.context_ != null) {
        if (context_ == null) {
          context_ = new global::SquaredUp.Dashboard.Schema.AzureInsightsAsTableTileConfig_Context();
        }
        Context.MergeFrom(other.Context);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (source_ == null) {
              source_ = new global::SquaredUp.Dashboard.Schema.AzureInsightsAsTableTileConfig_Source();
            }
            input.ReadMessage(source_);
            break;
          }
          case 18: {
            if (display_ == null) {
              display_ = new global::SquaredUp.Dashboard.Schema.AzureInsightsAsTableTileConfig_Display();
            }
            input.ReadMessage(display_);
            break;
          }
          case 26: {
            if (context_ == null) {
              context_ = new global::SquaredUp.Dashboard.Schema.AzureInsightsAsTableTileConfig_Context();
            }
            input.ReadMessage(context_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AzureInsightsAsTableTileConfig_Context : pb::IMessage<AzureInsightsAsTableTileConfig_Context> {
    private static readonly pb::MessageParser<AzureInsightsAsTableTileConfig_Context> _parser = new pb::MessageParser<AzureInsightsAsTableTileConfig_Context>(() => new AzureInsightsAsTableTileConfig_Context());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AzureInsightsAsTableTileConfig_Context> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SquaredUp.Dashboard.Schema.AzureReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AzureInsightsAsTableTileConfig_Context() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AzureInsightsAsTableTileConfig_Context(AzureInsightsAsTableTileConfig_Context other) : this() {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AzureInsightsAsTableTileConfig_Context Clone() {
      return new AzureInsightsAsTableTileConfig_Context(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AzureInsightsAsTableTileConfig_Context);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AzureInsightsAsTableTileConfig_Context other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AzureInsightsAsTableTileConfig_Context other) {
      if (other == null) {
        return;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  public sealed partial class AzureInsightsAsTableTileConfig_Source : pb::IMessage<AzureInsightsAsTableTileConfig_Source> {
    private static readonly pb::MessageParser<AzureInsightsAsTableTileConfig_Source> _parser = new pb::MessageParser<AzureInsightsAsTableTileConfig_Source>(() => new AzureInsightsAsTableTileConfig_Source());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AzureInsightsAsTableTileConfig_Source> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SquaredUp.Dashboard.Schema.AzureReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AzureInsightsAsTableTileConfig_Source() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AzureInsightsAsTableTileConfig_Source(AzureInsightsAsTableTileConfig_Source other) : this() {
      contentBody_ = other.contentBody_;
      method_ = other.method_;
      contentType_ = other.contentType_;
      Security_ = other.Security_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AzureInsightsAsTableTileConfig_Source Clone() {
      return new AzureInsightsAsTableTileConfig_Source(this);
    }

    /// <summary>Field number for the "contentBody" field.</summary>
    public const int ContentBodyFieldNumber = 1;
    private string contentBody_ = "";
    /// <summary>
    /// Content of the query body 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContentBody {
      get { return contentBody_; }
      set {
        contentBody_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "method" field.</summary>
    public const int MethodFieldNumber = 2;
    private string method_ = "";
    /// <summary>
    /// Method e.g. POST
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Method {
      get { return method_; }
      set {
        method_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "content_type" field.</summary>
    public const int ContentTypeFieldNumber = 3;
    private string contentType_ = "";
    /// <summary>
    /// e.g. application/json
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContentType {
      get { return contentType_; }
      set {
        contentType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "_security" field.</summary>
    public const int SecurityFieldNumber = 4;
    private string Security_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Security {
      get { return Security_; }
      set {
        Security_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AzureInsightsAsTableTileConfig_Source);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AzureInsightsAsTableTileConfig_Source other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ContentBody != other.ContentBody) return false;
      if (Method != other.Method) return false;
      if (ContentType != other.ContentType) return false;
      if (Security != other.Security) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ContentBody.Length != 0) hash ^= ContentBody.GetHashCode();
      if (Method.Length != 0) hash ^= Method.GetHashCode();
      if (ContentType.Length != 0) hash ^= ContentType.GetHashCode();
      if (Security.Length != 0) hash ^= Security.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ContentBody.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ContentBody);
      }
      if (Method.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Method);
      }
      if (ContentType.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ContentType);
      }
      if (Security.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Security);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ContentBody.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContentBody);
      }
      if (Method.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Method);
      }
      if (ContentType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContentType);
      }
      if (Security.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Security);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AzureInsightsAsTableTileConfig_Source other) {
      if (other == null) {
        return;
      }
      if (other.ContentBody.Length != 0) {
        ContentBody = other.ContentBody;
      }
      if (other.Method.Length != 0) {
        Method = other.Method;
      }
      if (other.ContentType.Length != 0) {
        ContentType = other.ContentType;
      }
      if (other.Security.Length != 0) {
        Security = other.Security;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            ContentBody = input.ReadString();
            break;
          }
          case 18: {
            Method = input.ReadString();
            break;
          }
          case 26: {
            ContentType = input.ReadString();
            break;
          }
          case 34: {
            Security = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AzureInsightsAsTableTileConfig_Display : pb::IMessage<AzureInsightsAsTableTileConfig_Display> {
    private static readonly pb::MessageParser<AzureInsightsAsTableTileConfig_Display> _parser = new pb::MessageParser<AzureInsightsAsTableTileConfig_Display>(() => new AzureInsightsAsTableTileConfig_Display());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AzureInsightsAsTableTileConfig_Display> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SquaredUp.Dashboard.Schema.AzureReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AzureInsightsAsTableTileConfig_Display() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AzureInsightsAsTableTileConfig_Display(AzureInsightsAsTableTileConfig_Display other) : this() {
      showHeaders_ = other.showHeaders_;
      zoom_ = other.zoom_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AzureInsightsAsTableTileConfig_Display Clone() {
      return new AzureInsightsAsTableTileConfig_Display(this);
    }

    /// <summary>Field number for the "show_headers" field.</summary>
    public const int ShowHeadersFieldNumber = 1;
    private bool showHeaders_;
    /// <summary>
    /// Whether to display table headers
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ShowHeaders {
      get { return showHeaders_; }
      set {
        showHeaders_ = value;
      }
    }

    /// <summary>Field number for the "zoom" field.</summary>
    public const int ZoomFieldNumber = 2;
    private string zoom_ = "";
    /// <summary>
    /// e.g. 'column'
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Zoom {
      get { return zoom_; }
      set {
        zoom_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AzureInsightsAsTableTileConfig_Display);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AzureInsightsAsTableTileConfig_Display other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ShowHeaders != other.ShowHeaders) return false;
      if (Zoom != other.Zoom) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ShowHeaders != false) hash ^= ShowHeaders.GetHashCode();
      if (Zoom.Length != 0) hash ^= Zoom.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ShowHeaders != false) {
        output.WriteRawTag(8);
        output.WriteBool(ShowHeaders);
      }
      if (Zoom.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Zoom);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ShowHeaders != false) {
        size += 1 + 1;
      }
      if (Zoom.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Zoom);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AzureInsightsAsTableTileConfig_Display other) {
      if (other == null) {
        return;
      }
      if (other.ShowHeaders != false) {
        ShowHeaders = other.ShowHeaders;
      }
      if (other.Zoom.Length != 0) {
        Zoom = other.Zoom;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            ShowHeaders = input.ReadBool();
            break;
          }
          case 18: {
            Zoom = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AzureLogAnalyticsAsScalarTileConfig : pb::IMessage<AzureLogAnalyticsAsScalarTileConfig> {
    private static readonly pb::MessageParser<AzureLogAnalyticsAsScalarTileConfig> _parser = new pb::MessageParser<AzureLogAnalyticsAsScalarTileConfig>(() => new AzureLogAnalyticsAsScalarTileConfig());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AzureLogAnalyticsAsScalarTileConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SquaredUp.Dashboard.Schema.AzureReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AzureLogAnalyticsAsScalarTileConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AzureLogAnalyticsAsScalarTileConfig(AzureLogAnalyticsAsScalarTileConfig other) : this() {
      Source = other.source_ != null ? other.Source.Clone() : null;
      Display = other.display_ != null ? other.Display.Clone() : null;
      Context = other.context_ != null ? other.Context.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AzureLogAnalyticsAsScalarTileConfig Clone() {
      return new AzureLogAnalyticsAsScalarTileConfig(this);
    }

    /// <summary>Field number for the "source" field.</summary>
    public const int SourceFieldNumber = 1;
    private global::SquaredUp.Dashboard.Schema.AzureLogAnalyticsAsScalarTileConfig_Source source_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SquaredUp.Dashboard.Schema.AzureLogAnalyticsAsScalarTileConfig_Source Source {
      get { return source_; }
      set {
        source_ = value;
      }
    }

    /// <summary>Field number for the "display" field.</summary>
    public const int DisplayFieldNumber = 2;
    private global::SquaredUp.Dashboard.Schema.AzureLogAnalyticsAsScalarTileConfig_Display display_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SquaredUp.Dashboard.Schema.AzureLogAnalyticsAsScalarTileConfig_Display Display {
      get { return display_; }
      set {
        display_ = value;
      }
    }

    /// <summary>Field number for the "context" field.</summary>
    public const int ContextFieldNumber = 3;
    private global::SquaredUp.Dashboard.Schema.AzureLogAnalyticsAsScalarTileConfig_Context context_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SquaredUp.Dashboard.Schema.AzureLogAnalyticsAsScalarTileConfig_Context Context {
      get { return context_; }
      set {
        context_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AzureLogAnalyticsAsScalarTileConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AzureLogAnalyticsAsScalarTileConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Source, other.Source)) return false;
      if (!object.Equals(Display, other.Display)) return false;
      if (!object.Equals(Context, other.Context)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (source_ != null) hash ^= Source.GetHashCode();
      if (display_ != null) hash ^= Display.GetHashCode();
      if (context_ != null) hash ^= Context.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (source_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Source);
      }
      if (display_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Display);
      }
      if (context_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Context);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (source_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Source);
      }
      if (display_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Display);
      }
      if (context_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Context);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AzureLogAnalyticsAsScalarTileConfig other) {
      if (other == null) {
        return;
      }
      if (other.source_ != null) {
        if (source_ == null) {
          source_ = new global::SquaredUp.Dashboard.Schema.AzureLogAnalyticsAsScalarTileConfig_Source();
        }
        Source.MergeFrom(other.Source);
      }
      if (other.display_ != null) {
        if (display_ == null) {
          display_ = new global::SquaredUp.Dashboard.Schema.AzureLogAnalyticsAsScalarTileConfig_Display();
        }
        Display.MergeFrom(other.Display);
      }
      if (other.context_ != null) {
        if (context_ == null) {
          context_ = new global::SquaredUp.Dashboard.Schema.AzureLogAnalyticsAsScalarTileConfig_Context();
        }
        Context.MergeFrom(other.Context);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (source_ == null) {
              source_ = new global::SquaredUp.Dashboard.Schema.AzureLogAnalyticsAsScalarTileConfig_Source();
            }
            input.ReadMessage(source_);
            break;
          }
          case 18: {
            if (display_ == null) {
              display_ = new global::SquaredUp.Dashboard.Schema.AzureLogAnalyticsAsScalarTileConfig_Display();
            }
            input.ReadMessage(display_);
            break;
          }
          case 26: {
            if (context_ == null) {
              context_ = new global::SquaredUp.Dashboard.Schema.AzureLogAnalyticsAsScalarTileConfig_Context();
            }
            input.ReadMessage(context_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AzureLogAnalyticsAsScalarTileConfig_Context : pb::IMessage<AzureLogAnalyticsAsScalarTileConfig_Context> {
    private static readonly pb::MessageParser<AzureLogAnalyticsAsScalarTileConfig_Context> _parser = new pb::MessageParser<AzureLogAnalyticsAsScalarTileConfig_Context>(() => new AzureLogAnalyticsAsScalarTileConfig_Context());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AzureLogAnalyticsAsScalarTileConfig_Context> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SquaredUp.Dashboard.Schema.AzureReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AzureLogAnalyticsAsScalarTileConfig_Context() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AzureLogAnalyticsAsScalarTileConfig_Context(AzureLogAnalyticsAsScalarTileConfig_Context other) : this() {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AzureLogAnalyticsAsScalarTileConfig_Context Clone() {
      return new AzureLogAnalyticsAsScalarTileConfig_Context(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AzureLogAnalyticsAsScalarTileConfig_Context);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AzureLogAnalyticsAsScalarTileConfig_Context other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AzureLogAnalyticsAsScalarTileConfig_Context other) {
      if (other == null) {
        return;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  public sealed partial class AzureLogAnalyticsAsScalarTileConfig_Source : pb::IMessage<AzureLogAnalyticsAsScalarTileConfig_Source> {
    private static readonly pb::MessageParser<AzureLogAnalyticsAsScalarTileConfig_Source> _parser = new pb::MessageParser<AzureLogAnalyticsAsScalarTileConfig_Source>(() => new AzureLogAnalyticsAsScalarTileConfig_Source());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AzureLogAnalyticsAsScalarTileConfig_Source> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SquaredUp.Dashboard.Schema.AzureReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AzureLogAnalyticsAsScalarTileConfig_Source() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AzureLogAnalyticsAsScalarTileConfig_Source(AzureLogAnalyticsAsScalarTileConfig_Source other) : this() {
      contentBody_ = other.contentBody_;
      method_ = other.method_;
      contentType_ = other.contentType_;
      Security_ = other.Security_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AzureLogAnalyticsAsScalarTileConfig_Source Clone() {
      return new AzureLogAnalyticsAsScalarTileConfig_Source(this);
    }

    /// <summary>Field number for the "contentBody" field.</summary>
    public const int ContentBodyFieldNumber = 1;
    private string contentBody_ = "";
    /// <summary>
    /// Content of the query body 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContentBody {
      get { return contentBody_; }
      set {
        contentBody_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "method" field.</summary>
    public const int MethodFieldNumber = 2;
    private string method_ = "";
    /// <summary>
    /// Method e.g. POST
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Method {
      get { return method_; }
      set {
        method_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "content_type" field.</summary>
    public const int ContentTypeFieldNumber = 3;
    private string contentType_ = "";
    /// <summary>
    /// e.g. application/json
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContentType {
      get { return contentType_; }
      set {
        contentType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "_security" field.</summary>
    public const int SecurityFieldNumber = 4;
    private string Security_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Security {
      get { return Security_; }
      set {
        Security_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AzureLogAnalyticsAsScalarTileConfig_Source);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AzureLogAnalyticsAsScalarTileConfig_Source other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ContentBody != other.ContentBody) return false;
      if (Method != other.Method) return false;
      if (ContentType != other.ContentType) return false;
      if (Security != other.Security) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ContentBody.Length != 0) hash ^= ContentBody.GetHashCode();
      if (Method.Length != 0) hash ^= Method.GetHashCode();
      if (ContentType.Length != 0) hash ^= ContentType.GetHashCode();
      if (Security.Length != 0) hash ^= Security.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ContentBody.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ContentBody);
      }
      if (Method.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Method);
      }
      if (ContentType.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ContentType);
      }
      if (Security.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Security);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ContentBody.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContentBody);
      }
      if (Method.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Method);
      }
      if (ContentType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContentType);
      }
      if (Security.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Security);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AzureLogAnalyticsAsScalarTileConfig_Source other) {
      if (other == null) {
        return;
      }
      if (other.ContentBody.Length != 0) {
        ContentBody = other.ContentBody;
      }
      if (other.Method.Length != 0) {
        Method = other.Method;
      }
      if (other.ContentType.Length != 0) {
        ContentType = other.ContentType;
      }
      if (other.Security.Length != 0) {
        Security = other.Security;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            ContentBody = input.ReadString();
            break;
          }
          case 18: {
            Method = input.ReadString();
            break;
          }
          case 26: {
            ContentType = input.ReadString();
            break;
          }
          case 34: {
            Security = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AzureLogAnalyticsAsScalarTileConfig_Display : pb::IMessage<AzureLogAnalyticsAsScalarTileConfig_Display> {
    private static readonly pb::MessageParser<AzureLogAnalyticsAsScalarTileConfig_Display> _parser = new pb::MessageParser<AzureLogAnalyticsAsScalarTileConfig_Display>(() => new AzureLogAnalyticsAsScalarTileConfig_Display());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AzureLogAnalyticsAsScalarTileConfig_Display> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SquaredUp.Dashboard.Schema.AzureReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AzureLogAnalyticsAsScalarTileConfig_Display() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AzureLogAnalyticsAsScalarTileConfig_Display(AzureLogAnalyticsAsScalarTileConfig_Display other) : this() {
      fontsize_ = other.fontsize_;
      coerceObject_ = other.coerceObject_;
      zoom_ = other.zoom_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AzureLogAnalyticsAsScalarTileConfig_Display Clone() {
      return new AzureLogAnalyticsAsScalarTileConfig_Display(this);
    }

    /// <summary>Field number for the "fontsize" field.</summary>
    public const int FontsizeFieldNumber = 1;
    private double fontsize_;
    /// <summary>
    /// Font size (!! naming convention incorrect !!)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Fontsize {
      get { return fontsize_; }
      set {
        fontsize_ = value;
      }
    }

    /// <summary>Field number for the "coerce_object" field.</summary>
    public const int CoerceObjectFieldNumber = 2;
    private bool coerceObject_;
    /// <summary>
    /// Whether to coerce objects 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CoerceObject {
      get { return coerceObject_; }
      set {
        coerceObject_ = value;
      }
    }

    /// <summary>Field number for the "zoom" field.</summary>
    public const int ZoomFieldNumber = 3;
    private string zoom_ = "";
    /// <summary>
    /// e.g. 'column'
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Zoom {
      get { return zoom_; }
      set {
        zoom_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AzureLogAnalyticsAsScalarTileConfig_Display);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AzureLogAnalyticsAsScalarTileConfig_Display other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Fontsize != other.Fontsize) return false;
      if (CoerceObject != other.CoerceObject) return false;
      if (Zoom != other.Zoom) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Fontsize != 0D) hash ^= Fontsize.GetHashCode();
      if (CoerceObject != false) hash ^= CoerceObject.GetHashCode();
      if (Zoom.Length != 0) hash ^= Zoom.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Fontsize != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(Fontsize);
      }
      if (CoerceObject != false) {
        output.WriteRawTag(16);
        output.WriteBool(CoerceObject);
      }
      if (Zoom.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Zoom);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Fontsize != 0D) {
        size += 1 + 8;
      }
      if (CoerceObject != false) {
        size += 1 + 1;
      }
      if (Zoom.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Zoom);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AzureLogAnalyticsAsScalarTileConfig_Display other) {
      if (other == null) {
        return;
      }
      if (other.Fontsize != 0D) {
        Fontsize = other.Fontsize;
      }
      if (other.CoerceObject != false) {
        CoerceObject = other.CoerceObject;
      }
      if (other.Zoom.Length != 0) {
        Zoom = other.Zoom;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 9: {
            Fontsize = input.ReadDouble();
            break;
          }
          case 16: {
            CoerceObject = input.ReadBool();
            break;
          }
          case 26: {
            Zoom = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// tile/azureloganalytics-as-table
  /// </summary>
  public sealed partial class AzureLogAnalyticsAsTableTileConfig : pb::IMessage<AzureLogAnalyticsAsTableTileConfig> {
    private static readonly pb::MessageParser<AzureLogAnalyticsAsTableTileConfig> _parser = new pb::MessageParser<AzureLogAnalyticsAsTableTileConfig>(() => new AzureLogAnalyticsAsTableTileConfig());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AzureLogAnalyticsAsTableTileConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SquaredUp.Dashboard.Schema.AzureReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AzureLogAnalyticsAsTableTileConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AzureLogAnalyticsAsTableTileConfig(AzureLogAnalyticsAsTableTileConfig other) : this() {
      Source = other.source_ != null ? other.Source.Clone() : null;
      Display = other.display_ != null ? other.Display.Clone() : null;
      Context = other.context_ != null ? other.Context.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AzureLogAnalyticsAsTableTileConfig Clone() {
      return new AzureLogAnalyticsAsTableTileConfig(this);
    }

    /// <summary>Field number for the "source" field.</summary>
    public const int SourceFieldNumber = 1;
    private global::SquaredUp.Dashboard.Schema.AzureLogAnalyticsAsTableTileConfig_Source source_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SquaredUp.Dashboard.Schema.AzureLogAnalyticsAsTableTileConfig_Source Source {
      get { return source_; }
      set {
        source_ = value;
      }
    }

    /// <summary>Field number for the "display" field.</summary>
    public const int DisplayFieldNumber = 2;
    private global::SquaredUp.Dashboard.Schema.AzureLogAnalyticsAsTableTileConfig_Display display_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SquaredUp.Dashboard.Schema.AzureLogAnalyticsAsTableTileConfig_Display Display {
      get { return display_; }
      set {
        display_ = value;
      }
    }

    /// <summary>Field number for the "context" field.</summary>
    public const int ContextFieldNumber = 3;
    private global::SquaredUp.Dashboard.Schema.AzureLogAnalyticsAsTableTileConfig_Context context_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SquaredUp.Dashboard.Schema.AzureLogAnalyticsAsTableTileConfig_Context Context {
      get { return context_; }
      set {
        context_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AzureLogAnalyticsAsTableTileConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AzureLogAnalyticsAsTableTileConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Source, other.Source)) return false;
      if (!object.Equals(Display, other.Display)) return false;
      if (!object.Equals(Context, other.Context)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (source_ != null) hash ^= Source.GetHashCode();
      if (display_ != null) hash ^= Display.GetHashCode();
      if (context_ != null) hash ^= Context.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (source_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Source);
      }
      if (display_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Display);
      }
      if (context_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Context);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (source_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Source);
      }
      if (display_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Display);
      }
      if (context_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Context);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AzureLogAnalyticsAsTableTileConfig other) {
      if (other == null) {
        return;
      }
      if (other.source_ != null) {
        if (source_ == null) {
          source_ = new global::SquaredUp.Dashboard.Schema.AzureLogAnalyticsAsTableTileConfig_Source();
        }
        Source.MergeFrom(other.Source);
      }
      if (other.display_ != null) {
        if (display_ == null) {
          display_ = new global::SquaredUp.Dashboard.Schema.AzureLogAnalyticsAsTableTileConfig_Display();
        }
        Display.MergeFrom(other.Display);
      }
      if (other.context_ != null) {
        if (context_ == null) {
          context_ = new global::SquaredUp.Dashboard.Schema.AzureLogAnalyticsAsTableTileConfig_Context();
        }
        Context.MergeFrom(other.Context);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (source_ == null) {
              source_ = new global::SquaredUp.Dashboard.Schema.AzureLogAnalyticsAsTableTileConfig_Source();
            }
            input.ReadMessage(source_);
            break;
          }
          case 18: {
            if (display_ == null) {
              display_ = new global::SquaredUp.Dashboard.Schema.AzureLogAnalyticsAsTableTileConfig_Display();
            }
            input.ReadMessage(display_);
            break;
          }
          case 26: {
            if (context_ == null) {
              context_ = new global::SquaredUp.Dashboard.Schema.AzureLogAnalyticsAsTableTileConfig_Context();
            }
            input.ReadMessage(context_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AzureLogAnalyticsAsTableTileConfig_Context : pb::IMessage<AzureLogAnalyticsAsTableTileConfig_Context> {
    private static readonly pb::MessageParser<AzureLogAnalyticsAsTableTileConfig_Context> _parser = new pb::MessageParser<AzureLogAnalyticsAsTableTileConfig_Context>(() => new AzureLogAnalyticsAsTableTileConfig_Context());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AzureLogAnalyticsAsTableTileConfig_Context> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SquaredUp.Dashboard.Schema.AzureReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AzureLogAnalyticsAsTableTileConfig_Context() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AzureLogAnalyticsAsTableTileConfig_Context(AzureLogAnalyticsAsTableTileConfig_Context other) : this() {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AzureLogAnalyticsAsTableTileConfig_Context Clone() {
      return new AzureLogAnalyticsAsTableTileConfig_Context(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AzureLogAnalyticsAsTableTileConfig_Context);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AzureLogAnalyticsAsTableTileConfig_Context other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AzureLogAnalyticsAsTableTileConfig_Context other) {
      if (other == null) {
        return;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  public sealed partial class AzureLogAnalyticsAsTableTileConfig_Source : pb::IMessage<AzureLogAnalyticsAsTableTileConfig_Source> {
    private static readonly pb::MessageParser<AzureLogAnalyticsAsTableTileConfig_Source> _parser = new pb::MessageParser<AzureLogAnalyticsAsTableTileConfig_Source>(() => new AzureLogAnalyticsAsTableTileConfig_Source());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AzureLogAnalyticsAsTableTileConfig_Source> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SquaredUp.Dashboard.Schema.AzureReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AzureLogAnalyticsAsTableTileConfig_Source() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AzureLogAnalyticsAsTableTileConfig_Source(AzureLogAnalyticsAsTableTileConfig_Source other) : this() {
      contentBody_ = other.contentBody_;
      method_ = other.method_;
      contentType_ = other.contentType_;
      Security_ = other.Security_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AzureLogAnalyticsAsTableTileConfig_Source Clone() {
      return new AzureLogAnalyticsAsTableTileConfig_Source(this);
    }

    /// <summary>Field number for the "contentBody" field.</summary>
    public const int ContentBodyFieldNumber = 1;
    private string contentBody_ = "";
    /// <summary>
    /// Content of the query body 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContentBody {
      get { return contentBody_; }
      set {
        contentBody_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "method" field.</summary>
    public const int MethodFieldNumber = 2;
    private string method_ = "";
    /// <summary>
    /// Method e.g. POST
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Method {
      get { return method_; }
      set {
        method_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "content_type" field.</summary>
    public const int ContentTypeFieldNumber = 3;
    private string contentType_ = "";
    /// <summary>
    /// e.g. application/json
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContentType {
      get { return contentType_; }
      set {
        contentType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "_security" field.</summary>
    public const int SecurityFieldNumber = 4;
    private string Security_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Security {
      get { return Security_; }
      set {
        Security_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AzureLogAnalyticsAsTableTileConfig_Source);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AzureLogAnalyticsAsTableTileConfig_Source other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ContentBody != other.ContentBody) return false;
      if (Method != other.Method) return false;
      if (ContentType != other.ContentType) return false;
      if (Security != other.Security) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ContentBody.Length != 0) hash ^= ContentBody.GetHashCode();
      if (Method.Length != 0) hash ^= Method.GetHashCode();
      if (ContentType.Length != 0) hash ^= ContentType.GetHashCode();
      if (Security.Length != 0) hash ^= Security.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ContentBody.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ContentBody);
      }
      if (Method.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Method);
      }
      if (ContentType.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ContentType);
      }
      if (Security.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Security);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ContentBody.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContentBody);
      }
      if (Method.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Method);
      }
      if (ContentType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContentType);
      }
      if (Security.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Security);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AzureLogAnalyticsAsTableTileConfig_Source other) {
      if (other == null) {
        return;
      }
      if (other.ContentBody.Length != 0) {
        ContentBody = other.ContentBody;
      }
      if (other.Method.Length != 0) {
        Method = other.Method;
      }
      if (other.ContentType.Length != 0) {
        ContentType = other.ContentType;
      }
      if (other.Security.Length != 0) {
        Security = other.Security;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            ContentBody = input.ReadString();
            break;
          }
          case 18: {
            Method = input.ReadString();
            break;
          }
          case 26: {
            ContentType = input.ReadString();
            break;
          }
          case 34: {
            Security = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AzureLogAnalyticsAsTableTileConfig_Display : pb::IMessage<AzureLogAnalyticsAsTableTileConfig_Display> {
    private static readonly pb::MessageParser<AzureLogAnalyticsAsTableTileConfig_Display> _parser = new pb::MessageParser<AzureLogAnalyticsAsTableTileConfig_Display>(() => new AzureLogAnalyticsAsTableTileConfig_Display());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AzureLogAnalyticsAsTableTileConfig_Display> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SquaredUp.Dashboard.Schema.AzureReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AzureLogAnalyticsAsTableTileConfig_Display() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AzureLogAnalyticsAsTableTileConfig_Display(AzureLogAnalyticsAsTableTileConfig_Display other) : this() {
      showHeaders_ = other.showHeaders_;
      zoom_ = other.zoom_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AzureLogAnalyticsAsTableTileConfig_Display Clone() {
      return new AzureLogAnalyticsAsTableTileConfig_Display(this);
    }

    /// <summary>Field number for the "show_headers" field.</summary>
    public const int ShowHeadersFieldNumber = 1;
    private bool showHeaders_;
    /// <summary>
    /// Whether to display table headers
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ShowHeaders {
      get { return showHeaders_; }
      set {
        showHeaders_ = value;
      }
    }

    /// <summary>Field number for the "zoom" field.</summary>
    public const int ZoomFieldNumber = 2;
    private string zoom_ = "";
    /// <summary>
    /// e.g. 'column'
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Zoom {
      get { return zoom_; }
      set {
        zoom_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AzureLogAnalyticsAsTableTileConfig_Display);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AzureLogAnalyticsAsTableTileConfig_Display other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ShowHeaders != other.ShowHeaders) return false;
      if (Zoom != other.Zoom) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ShowHeaders != false) hash ^= ShowHeaders.GetHashCode();
      if (Zoom.Length != 0) hash ^= Zoom.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ShowHeaders != false) {
        output.WriteRawTag(8);
        output.WriteBool(ShowHeaders);
      }
      if (Zoom.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Zoom);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ShowHeaders != false) {
        size += 1 + 1;
      }
      if (Zoom.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Zoom);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AzureLogAnalyticsAsTableTileConfig_Display other) {
      if (other == null) {
        return;
      }
      if (other.ShowHeaders != false) {
        ShowHeaders = other.ShowHeaders;
      }
      if (other.Zoom.Length != 0) {
        Zoom = other.Zoom;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            ShowHeaders = input.ReadBool();
            break;
          }
          case 18: {
            Zoom = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
